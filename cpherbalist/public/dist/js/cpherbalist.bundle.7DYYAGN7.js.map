{
  "version": 3,
  "sources": ["../../../../../apps/cpherbalist/cpherbalist/public/js/pos_invoice_coupon.js", "../../../../../apps/cpherbalist/cpherbalist/public/js/cpherbalist.js", "../../../../../apps/cpherbalist/cpherbalist/public/js/utils.js", "../../../../../apps/cpherbalist/cpherbalist/public/cpherbalist.bundle.js", "../../../../../apps/cpherbalist/cpherbalist/public/js/coupon_extensions.js", "../../../../../apps/cpherbalist/cpherbalist/public/js/manufacturing_extensions.js", "../../../../../apps/cpherbalist/cpherbalist/public/js/customer_extensions.js", "../../../../../apps/cpherbalist/cpherbalist/public/js/customer_list.js", "../../../../../apps/cpherbalist/cpherbalist/public/js/clear_pos_on_logout.js"],
  "sourcesContent": ["var totalDiscountAmount = 0;\nvar currency = 'EUR';\nvar select2Element = undefined;\nvar checkoutFlag = false;\nvar isDeposit = false;\nvar loaded = 0;\n\nwindow.required_foreign_amount = false;\nwindow.related_invoices = [];\n\nvar itemsToReserved = [];\n// item_code \n// item_name\n// qty \n// rate\n\nvar baseAmount = 0;\nvar outstandingAmount = 0;\n\nvalidate_discount_not_exceed_total_amount = (total, discount_amount) => {\n    let difference = 0;\n\n    if (discount_amount > total) {\n        difference = discount_amount - total;\n    }\n\n    return difference;\n};\n\n\n\n\n\napply_coupon = async (e) => {\n    let t = await frappe.call({\n        method: \"cpherbalist.pos.apply_coupon_code\",\n        args: {\n            applied_code: cur_frm.doc.custom_coupon_code,\n            applied_amount: cur_frm.doc.discount_amount,\n            transaction_id: cur_frm.doc.name\n        }\n    })\n};\n\ncustom_remove_coupon = async (e) => {\n    let apply_discount_button = document.querySelector('button[data-fieldname=\"custom_apply_coupon\"]');\n    let remove_discount_button = document.querySelector('button[data-fieldname=\"custom_remove_coupon\"]');\n\n    remove_discount_button.remove()\n\n    apply_discount_button.disabled = false;\n\n    // remove discount amount\n    cur_frm.set_value('discount_amount', 0);\n    readjustPaymentMethod(0)\n    remove_remarks();\n\n    $(`.mode-of-payment[data-mode=\"cash\"]`)[0].click()\n\n    let credit_forward_amount_element = document.querySelector('input[data-fieldname=\"custom_credit_forward_amount_\"]');\n    credit_forward_amount_element.value = 0;\n    cur_frm.doc.custom_credit_forward_amount_ = 0;\n    //console.log(cur_frm);\n\n\n\n\n};\n\n\n\nshow_autosuggest_for_testers = () => {\n\n\n}\n\n\nshow_remove_coupons_button = () => {\n    // add remove coupon button.\n    let apply_discount_button = document.querySelector('button[data-fieldname=\"custom_apply_coupon\"]');\n    apply_discount_button.disabled = true;\n    let _parent = apply_discount_button.parentElement;\n    let remove_coupon_btn = document.createElement('button');\n    remove_coupon_btn.innerHTML = 'Remove Coupon';\n    remove_coupon_btn.classList.add('btn')\n    remove_coupon_btn.classList.add('btn-default');\n    remove_coupon_btn.classList.add('btn-primary');\n    remove_coupon_btn.classList.add('ml-2')\n    remove_coupon_btn.setAttribute(\"data-fieldname\", \"custom_remove_coupon\");\n    remove_coupon_btn.addEventListener('click', (e) => {\n        this.custom_remove_coupon(e);\n    });\n    _parent.appendChild(remove_coupon_btn);\n\n\n}\n\nset_credit_forward_amount = (amount, frm = Object) => {\n    let credit_forward_amount_element = document.querySelector('input[data-fieldname=\"custom_credit_forward_amount_\"]');\n \n    credit_forward_amount_element.value = amount;\n\n    frm.doc.custom_credit_forward_amount_ = amount.toFixed(2);\n\n    document.querySelector('input[data-fieldname=\"custom_credit_forward_amount_\"]').readOnly = true;\n};\n\ntoggle_credit_forward_amount = () => {\n    const tryToDisable = () => {\n        const inputElement = document.querySelector('input[data-fieldname=\"custom_credit_forward_amount_\"]');\n\n        if (inputElement) {\n            inputElement.readOnly = true;\n        } else {\n            setTimeout(tryToDisable, 3000);\n        }\n    };\n\n    tryToDisable(); // Start the first check\n};\n\nadd_remark = (value) => {\n    let remark_element = document.querySelector('textarea[data-fieldname=\"custom_remarks\"]');\n    remark_element.value += value + '\\n';\n    cur_frm.doc.custom_remarks = remark_element.value;\n}\n\nget_remarks = () => {\n    let remark_element = document.querySelector('textarea[data-fieldname=\"custom_remarks\"]');\n    return remark_element.value;\n}\n\nremove_remarks = () => {\n    let remark_element = document.querySelector('textarea[data-fieldname=\"custom_remarks\"]');\n    remark_element.value = '';\n    cur_frm.doc.custom_remarks = '';\n}\n\napply_discount = (frm, amount, couponCode) => {\n    let difference_amount = 0; //validate_discount_not_exceed_total_amount(cur_frm.doc.net_total,amount);\n    let netTotalAmount = cur_frm.doc.net_total;\n\n    switch (frm.doc.apply_discount_on) {\n        case 'Grand Total':\n            difference_amount = validate_discount_not_exceed_total_amount(cur_frm.doc.grand_total, amount);\n            break;\n        case 'Net Total':\n            difference_amount = validate_discount_not_exceed_total_amount(cur_frm.doc.net_total, amount);\n            break;\n    }\n\n\n    console.log('Difference Amount', difference_amount)\n\n    if (difference_amount > 0) {\n\n        let applied_coupons = get_applied_coupons();\n        console.log('applied_coupons ', applied_coupons)\n\n\n        if (applied_coupons.length >= 2) {\n            couponCode = applied_coupons[applied_coupons.length - 1];\n            const _credited_amount = __(\"Amount of {0} {1} will be credited for coupon {2}.\", [currency, difference_amount, couponCode]);\n            add_remark(_credited_amount);\n        }\n\n        const credited_amount = __(\"Amount of <b>{0} {1}</b> will be credited for coupon <b>{2}</b>.\", [currency, difference_amount, couponCode]);\n\n        frappe.msgprint({\n            title: __('Credit Amount'),\n            indicator: 'green,',\n            message: credited_amount\n        });\n\n        let codes = applied_coupons[applied_coupons.length - 1] //couponCode.split(/\\r?\\n/).filter(line => line.trim() !== '').map(line => line.trim()).join(\",\").split(',');\n        console.log('concatenatedString [apply_discount]', codes)\n\n        frm.set_value('discount_amount', netTotalAmount)\n\n        if (applied_coupons.length >= 2) {\n            frm.set_value('custom_credit_forward_amount_', parseFloat(difference_amount).toFixed(2))\n            set_credit_forward_amount(parseFloat(difference_amount));\n\n        } else {\n            frm.set_value('custom_credit_forward_amount_', parseFloat(difference_amount).toFixed(2))\n            set_credit_forward_amount(parseFloat(difference_amount));\n        }\n\n    } else {\n        frm.set_value('discount_amount', amount)\n    }\n\n    const coupon_applied_msg = __(\"Coupon with code <b>{0}</b> has been applied for the amount of <b>{1} {2}</b>.\", [\n        couponCode,\n        currency,\n        amount\n    ]);\n\n    frappe.msgprint({\n        title: __('Coupon Applied'),\n        indicator: 'green,',\n        message: coupon_applied_msg\n    });\n\n    //let msg = `Coupon ${couponCode} : ${currency} ${amount}`;\n    //add_remark('Coupon with code ' + couponCode + ' has been applied for the amount of ' + currency + ' ' + amount + '.');\n    //add_remark(msg);\n}\n\n// TODO: UPDATE\nget_applied_coupons = () => {\n    let lines = document.querySelector('input[data-fieldname=\"custom_coupon_code\"]').value.replace('.',' ').split(' ').filter(line => line.trim() !== '')\n    return lines;\n}\n\nmultiple_coupons_applied = () => {\n    return get_applied_coupons.length >= 2;\n}\n\nget_select2_data = (element) => {\n    return $(element).select2('data')\n}\n\ninit_select2_events = () => {\n\n    element = select2Element;\n\n    $(element).on('select2:select', function (e) {\n        console.log('Select ...')\n    });\n\n    $(element).on('select2:unselect', function (e) {\n        console.log('unselect ...')\n    });\n\n    $(element).on('select2:clear', function (e) {\n        remove_remarks();\n        console.log('clear ...')\n    });\n\n    $(element).on('select2:close', function (e) {\n        remove_remarks();\n        let selected_items = get_select2_data(element)\n\n        baseAmount = 0;\n        itemsToReserved = [];\n\n        let remarks = '';\n\n        if (selected_items.length === 0) {\n            let em = document.querySelector(\".submit-order-btn\")\n            em.style.display = 'none';\n            return;\n        } else {\n            let em = document.querySelector(\".submit-order-btn\")\n            em.style.display = 'flex';\n        }\n\n        for (let index = 0; index < selected_items.length; index++) {\n            const element = selected_items[index];\n            let split = element.text.split('\u2022')\n\n\n            // item['brand']\n            // item['item_code']\n            // item['name']} ({item['currency']\n            // item['price_list_rate']\n\n            console.log(`:: ${index} selected items ::`, element.text.split('\u2022'))\n            console.log(`:: ${index} amount ::`, split[split.length - 1].split(' ')[1])\n\n\n            let itemAmount = parseFloat(split[split.length - 1].split(' ')[1]);\n\n            itemsToReserved.push({\n                \"item\": split[1].trim(),\n                \"item_name\": split[2].trim(),\n                \"qty\": 1,\n                \"rate\": itemAmount,\n                \"total_amount\": itemAmount\n\n            })\n\n            baseAmount += itemAmount\n\n\n\n            remarks += `(x1) of ${split[1].trim()} ${split[2].trim()} with reference amount of ${split[3].trim()} \\n`\n\n        }\n\n\n        add_remark(remarks);\n    });\n    \n    // create_remarks_for_selected_item\n}\n\nformatData = (data) => {\n    if (!data) return;\n\n    console.log(\" :: \uD83E\uDE84 format data ::\")\n\n    var baseUrl = \"https://raw.githubusercontent.com/lipis/flag-icons/refs/heads/main/flags/4x3/cy.svg\";\n    var $_ = $(\n        `<span><img src=\"${baseUrl}\" class=\"img-pos-prod\" /> ${data} </span>`\n    );\n    return $_;\n};\n\nfrappe.ui.form.on('POS Invoice', {\n    onload_post_render: function (frm) {\n        if (frappe.user.has_role(\"Disable Desk\")) { }\n\n        // cur_pos.payment.selected_mode.set_value(1)\n        // $pm = cur_pos.payment.$payment_modes;\n\n        if (frm.is_new() === undefined) {\n            frm.toggle_display('custom_apply_coupon', 0)\n        }\n\n        if (frm.is_new())\n        {\n            function makeid(length) {\n                var result           = '';\n                var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n                var charactersLength = characters.length;\n                for ( var i = 0; i < length; i++ ) {\n                result += characters.charAt(Math.floor(Math.random() * charactersLength));\n                }\n                return result;\n            }\n\n            cur_frm.set_value(\"custom_survey_reference_code\",makeid(8),'',null)\n\n\n            frappe.db.get_doc('CP Settings').then(x => {\n\n                console.log(x.pos_invoice_questionersurvey)\n                let randomiseFactor = undefined;\n                \n                if (x.pos_invoice_questionersurvey.filter(iqs => iqs.active === 1).length >= 1) {\n                    \n                    if (x.pos_invoice_questionersurvey.filter(iqs => iqs.active === 1)[0].randomise_sample) {\n                        randomiseFactor = x.pos_invoice_questionersurvey.filter(iqs => iqs.active === 1)[0].randomise_factor;\n                        console.log('randomiseFactor', randomiseFactor.split('/'))\n                        cur_frm.set_value(\"custom_randomise_factor\",randomBool(parseFloat(randomiseFactor.split('/')[0])/100),'',null)\n                    } else {\n\n                        cur_frm.set_value(\"custom_randomise_factor\",1,'',null)\n\n                    }\n                    \n                }\n\n\n                function randomBool50_50() {\n                    return Math.random() < 0.5;\n                }\n\n                function randomBool(probabilityTrue = 0.6) {\n                    return Math.random() < probabilityTrue;\n                }\n                \n            })\n\n\n\n        }\n\n\n        if (frm.doc.is_return) {\n            console.log('Reset Coupon')\n            frm.toggle_display('custom_apply_coupon', 1)\n        }\n    },\n\n    validate(frm) {\n\n        // Allow zero rate items during POS invoice\n        frm.doc.items.forEach(function(item) {\n            if (item.rate == 0) {\n                console.log(`Zero-rated item: ${item.item_name}`);\n                \n            }\n        });\n\n        if (!checkoutFlag) {\n            if (cur_frm.doc.items.some(i => i.item_name === \"DEPOSIT\")) {\n                isDeposit = true;\n            }\n            frappe.validated = true;\n            return;\n        }\n\n\n        checkoutFlag = true;\n\n    },\n    custom_item_reserved_status: function (frm) {\n\n\n    },\n    before_submit: function (frm) {\n\n    },\n\n    // TODO: SYNC\n    on_submit: function (frm) {\n        console.log(\":: on submit ::\")\n        console.log(\" ++ DOCUMENT IS SUBMITTED NOW ++\", frm.doc);\n\n        if (frm.doc.is_return) {\n\n            // Create new coupon code with the value of \n\n\n        } else {\n            let custom_credit_forward_amount_ = frm.doc.custom_credit_forward_amount_;\n            let _couponCode = get_applied_coupons();\n            let last_coupon = _couponCode[_couponCode.length - 1];\n    \n            if (_couponCode.length >= 1) {\n    \n                if (custom_credit_forward_amount_ > 0 && _couponCode.length >= 2) {\n    \n                    _couponCode.forEach((c) => {\n    \n                        frappe.call({\n                            method: \"cpherbalist.pos.redeem_coupon\",\n                            args: {\n                                coupon_code: c,\n                            }\n                        }).then((result) => {\n    \n                            frappe.call({\n                                method: \"cpherbalist.pos.update_coupon_balance\",\n                                args: {\n                                    coupon_code: c,\n                                    balance: 0\n                                }\n                            })\n                                .then((result) => {\n    \n                                    if (c === last_coupon) {\n                                        frappe.call({\n                                            // reactivate_coupon\n                                            // update_coupon_balance\n                                            method: \"cpherbalist.pos.reactivate_coupon\",\n                                            args: {\n                                                coupon_code: last_coupon,\n                                                balance: custom_credit_forward_amount_\n                                            }\n                                        })\n                                            .then((result) => { })\n                                            .catch((err) => { });\n                                    }\n                                })\n                                .catch((err) => { });\n    \n                        }).catch((err) => { });\n                    })\n                } else {\n                    \n                    if (custom_credit_forward_amount_ > 0) {\n    \n                            frappe.call({\n                                method: \"cpherbalist.pos.get_coupon_name_by_code\",\n                                args: { code: _couponCode[0] },\n                                callback: function(r) {\n                                    if (r.message) {\n                                        console.log(\"Coupon Name:\", r.message[0].coupon_code);\n        \n                                        frappe.call({\n                                            method: \"cpherbalist.pos.update_coupon_balance\",\n                                            args: {\n                                                coupon_code: _couponCode[0],\n                                                balance: custom_credit_forward_amount_\n                                            }\n                                        })\n                                            .then((result) => { })\n                                            .catch((err) => { });\n                                    } else {\n                                        console.log(\"Coupon not found.\");\n                                    }\n                                }\n                            })\n    \n                    } else {\n                        frappe.call({\n                            method: \"cpherbalist.pos.redeem_coupon\",\n                            args: {\n                                coupon_code: _couponCode[0],\n                            }\n                        }).then((result) => {\n    \n                            frappe.call({\n                                method: \"cpherbalist.pos.update_coupon_balance\",\n                                args: {\n                                    coupon_code: _couponCode[0],\n                                    balance: custom_credit_forward_amount_\n                                }\n                            })\n                                .then((result) => { })\n                                .catch((err) => { });\n    \n                        }).catch((err) => { });\n    \n                    }\n                }\n            }\n    \n            if (isDeposit) {\n                let paidCreditedInvoice = cur_frm.doc.custom_reference_invoice != '';\n                let custom_reference_invoice_exist = cur_frm.custom_reference_invoice != null || cur_frm.custom_reference_invoice != '' || cur_frm.custom_reference_invoice != undefined;\n    \n    \n                if (paidCreditedInvoice && (itemsToReserved.length > 1)) {\n                    frappe.validated = false;\n                    frappe.throw(__(\"You can not create transaction contain reference invoice and product.\"))\n                    return false;\n                } else if (!paidCreditedInvoice && (itemsToReserved.length === 0)) {\n                    frappe.validated = false;\n                    frappe.throw(__(\"Please select either a product or reference invoice.\"))\n                    return false;\n                } else if (itemsToReserved.length >= 1 && (cur_frm.doc.custom_item_reserved_status === null || cur_frm.doc.custom_item_reserved_status == '' || cur_frm.doc.custom_item_reserved_status === undefined)\n                    && (cur_frm.custom_reference_invoice != null || cur_frm.custom_reference_invoice != '' || cur_frm.custom_reference_invoice != undefined)) {\n                    cur_frm.toggle_reqd('custom_item_reserved_status', 0)\n                    frappe.validated = false;\n                    frappe.throw(__(\"Please select a reservation status.\"))\n                    return false;\n                } else if (itemsToReserved.length == 0 && custom_reference_invoice_exist) {\n    \n                    cur_frm.toggle_reqd('custom_item_reserved_status', 0)\n    \n    \n    \n                }\n    \n                if (cur_frm.doc.custom_reference_invoice != '') {\n    \n                    frappe.db.get_doc('POS Invoice', cur_frm.doc.custom_reference_invoice).then(r => {\n    \n    \n                        console.log(\":: POS INVOICE ::\", r)\n    \n                        if (r.custom_parent_invoice != null) {\n                            cur_frm.doc.custom_parent_invoice = r.custom_parent_invoice\n                        } else {\n                            cur_frm.doc.custom_parent_invoice = cur_frm.doc.custom_reference_invoice\n                        }\n    \n                        cur_frm.doc.custom_is_deposit = r.custom_is_deposit;\n                        cur_frm.doc.custom_base_amount = r.custom_base_amount;\n                        let newOutstandingAmount = r.custom_invoices_outstanding_amount_ - (cur_frm.doc.total * -1)\n                        cur_frm.doc.custom_invoices_outstanding_amount_ = newOutstandingAmount\n                        //_remark = `Amount of ${cur_frm.doc.total} received against the Invoice ${cur_frm.doc.custom_reference_invoice} (${r.custom_invoices_outstanding_amount_}), with new outstanding balance of EUR ${newOutstandingAmount}.`\n    \n                        if (newOutstandingAmount === 0) {\n    \n    \n                            frappe.db.get_doc('Michalis Diamond Gallery Settings').then(res => {\n                                cur_frm.doc.custom_is_settlement_invoice = 1;\n    \n                                msgprint('Create sales invoice for that product.')\n    \n                                let customer = cur_frm.doc.customer;\n                                let items_to_update_stock = [];\n                                let related_invoices = [];\n                                console.log('Create Sales invoice ...')\n                                console.log('\u2699\uFE0F default_reservation_warehouse ', res['default_reservation_warehouse'])\n    \n                                frappe.call({\n                                    method: \"cpherbalist.pos.get_child_invoices\", //dotted path to server method\n                                    args: {\n                                        filters: { parent_invoice: `${cur_frm.doc.custom_parent_invoice}` }\n                                    },\n                                    success: function (r) { },\n                                    error: function (r) { },\n                                    callback: function (r) {\n                                        console.log(' -- [callback] RELATED INVOICES --', r.message)\n                                        window.related_invoices = r.message\n    \n                                        if (window.related_invoices.length >= 1) {\n    \n    \n                                            get_parent_invoice_obj(cur_frm.doc.custom_parent_invoice).then(pobj => {\n    \n                                                if (r != null) {\n    \n                                                    let items = get_items_from_parent_invoice(pobj)\n    \n                                                    console.log('    PARENT INVOICE ', pobj)\n                                                    console.log('       INVOICE OBJECT ', items)\n    \n    \n    \n                                                    frappe.call({\n                                                        method: \"cpherbalist.pos.create_stock_entry_against_parent_invoice_reserved_items\",\n                                                        args: {\n                                                            filters: {\n                                                                parent_invoice: pobj.name\n                                                            }\n                                                        },\n                                                        callback: function (r) {\n                                                            console.log(r)\n                                                        }\n                                                    });\n                                                }\n                                            })\n                                        }\n                                    }\n                                })\n                            });\n                        }\n                        //msgprint(`Deposit against the amount: ${baseAmount}\\nOutstanding amount: ${outstandingAmount}`);\n                    })\n                }\n                else // in case that we do not have any item selected ...\n                {\n                    // set custom_items_to_deposit\n    \n                    // item\n                    // item_name\n                    // qty \n                    // rate\n    \n                    console.log(\" -- ITEMS TO RESERVED -- \", itemsToReserved)\n    \n                    // Loop through the items and add them to the child table\n                    itemsToReserved.forEach(function (item) {\n                        var row = cur_frm.add_child('custom_items_to_deposit');\n                        row.item = item.item;\n                        row.item_name = item.item_name;\n                        row.qty = item.qty;\n                        row.rate = item.rate;\n                        row.total_amount = item.qty * item.rate\n    \n    \n                        // Refresh the form to reflect the changes\n                        cur_frm.refresh_field('custom_items_to_deposit');\n    \n                        frappe.db.get_value(\"User\", frappe.session.user, \"warehouse\").then(response => {\n    \n                            console.log(' ^^ POS PROFILE ^^', response.message.warehouse);\n                            _from_warehouse = response.message.warehouse;\n    \n                        })\n    \n    \n                        get_settings('default_reservation_warehouse').then(settingValue => {\n    \n                            let _from_warehouse = settingValue;\n                            let _to_warehouse = undefined;\n    \n                            console.log(settingValue);\n    \n                            get_pos_profile_warehouse(cur_pos.pos_profile).then(ppw => {\n    \n                                _to_warehouse = ppw;\n    \n                                if ((_from_warehouse != '' || _from_warehouse != undefined || _from_warehouse === null) &&\n                                    ((_to_warehouse != '' || _to_warehouse != undefined || _to_warehouse === null))) {\n    \n                                    let _custom_item_given = 0;\n                                    let _custom_item_hold = 1;\n                                    let _custom_item_reserved_status = cur_frm.doc.custom_item_reserved_status\n    \n                                    try {\n                                        if (_custom_item_reserved_status != null) {\n    \n                                            if (_custom_item_reserved_status.includes('Hold') || _custom_item_reserved_status.includes('Undelivered')) { }\n    \n                                            if (_custom_item_reserved_status.includes('Given') || _custom_item_reserved_status.includes('Released') || _custom_item_reserved_status.includes('Delivered')) {\n                                                _custom_item_given = 1;\n                                                _custom_item_hold = 0;\n                                            }\n    \n                                        } else {\n                                            return;\n    \n                                        }\n                                    } catch (error) {\n    \n                                    }\n    \n    \n    \n    \n    \n                                    // move items out \n                                    frappe.call({\n                                        // method: \"erpnext.stock.doctype.stock_entry.stock_entry_utils.make_stock_entry\",\n                                        method: \"cpherbalist.mdg_stock_entry_utils.make_stock_entry\",\n    \n                                        args: {\n                                            item_code: row.item,\n                                            qty: 1, //qty_to_move,\n                                            from_warehouse: _to_warehouse,\n                                            to_warehouse: _from_warehouse,\n                                            company: frappe.defaults.get_user_defaults(\"Company\")[0],\n                                            custom_item_given: _custom_item_given,\n                                            custom_item_hold: _custom_item_hold,\n                                        },\n                                        callback: (r) => {\n    \n                                        },\n                                    }).then(r => {\n                                        frm.refresh();\n                                    });\n                                }\n    \n                            })\n                        }).catch(error => {\n                            console.error('Error:', error);\n                        });\n                    });\n    \n    \n                    // cur_frm.doc.custom_item_reserved_status\n                    // // create sales invoice against the reserved warehouse \n    \n                    cur_frm.doc.custom_is_deposit = 1;\n                    cur_frm.doc.custom_base_amount = baseAmount;\n                    let outstandingAmount = cur_frm.doc.custom_invoices_outstanding_amount_ - (baseAmount - cur_frm.doc.total)\n                    cur_frm.doc.custom_invoices_outstanding_amount_ = outstandingAmount\n                }\n    \n            }\n    \n            // check for seller account \n            let _sellerAccount = JSON.parse(localStorage.getItem('seller_profile')).value\n    \n            if (_sellerAccount) {\n                cur_frm.doc.custom_seller_account = _sellerAccount\n            }\n        }\n\n\n\n    },\n\n    \n    custom_reference_invoice: function (frm) {\n\n        if (cur_frm.doc.items.some(i => i.item_name === \"DEPOSIT\")) {\n\n            if (cur_frm.doc.custom_reference_invoice === '' || cur_frm.doc.custom_reference_invoice === null || cur_frm.doc.custom_reference_invoice === undefined) {\n                return\n            }\n\n\n\n            let total_amount = 0;\n            let iframeurl = `/printview?doctype=POS%20Invoice&name=${cur_frm.doc.custom_reference_invoice}&trigger_print=0&format=POS%20Invoice&no_letterhead=0&letterhead=MDG%20-%20POS%20Invoice&settings=%7B%7D&_lang=en`;\n\n            Swal.fire({\n                title: `Invoice ${cur_frm.doc.custom_reference_invoice}`,\n                html: `<iframe src=\"${iframeurl}\" class=\"iframe-popup\" frameborder=\"0\"></iframe>`,\n                showDenyButton: true,\n                denyButtonText: 'Change Invoice',\n\n\n                confirmButtonText: 'Yes',\n                showConfirmButton: true,\n                focusConfirm: true,\n\n                showCancelButton: false,\n\n\n                customClass: {\n                    popup: 'custom-popup'\n                },\n                width: '95%',\n                heightAuto: false,\n                didOpen: () => {\n\n                    try {\n                        document.querySelector('input[data-fieldname=\"custom_reference_invoice\"]').parentElement.parentElement.childNodes[3].children[1].remove()\n                        //document.querySelector('input[data-fieldname=\"custom_reference_invoice\"]').parentElement.parentElement.childNodes[3].children[0].children[0].remove()\n\n                        // // Adding click event listeners for the buttons after the modal opens\n                        // document.getElementById('.swal2-cancel ').addEventListener('click', () => {\n                        //   Swal.close(); // Close the current SweetAlert\n                        //   // Add logic for \"Change Invoice\" here (e.g., navigate to a new page, show another dialog, etc.)\n                        //   alert(\"Redirecting to change invoice.\");\n\n                        //   document.querySelector('input[data-fieldname=\"custom_reference_invoice\"]').value = ''; \n                        //   document.querySelector('textarea[data-fieldname=\"custom_remarks\"]').value = ''\n\n                        // });\n\n                        // document.getElementById('.acceptContinueBtn').addEventListener('click', () => {\n                        //   Swal.close(); // Close the current SweetAlert\n                        //   // Add logic for \"Accept and Continue\" here (e.g., submit form, proceed to next step, etc.)\n                        //   alert(\"Proceeding with the invoice.\");\n\n                        // });\n\n                    } catch (error) { }\n\n\n                }\n            }).then((result) => {\n                if (result.isConfirmed) {\n                    Swal.fire('Updated !', '', 'success')\n                    let em = document.querySelector(\".submit-order-btn\")\n                    em.style.display = 'flex';\n                } else if (result.isDenied) {\n\n                    document.querySelector('input[data-fieldname=\"custom_reference_invoice\"]').value = '';\n                    document.querySelector('textarea[data-fieldname=\"custom_remarks\"]').value = ''\n                    document.querySelector('data-fieldname=\"custom_reference_invoice\"').focus()\n                    Swal.fire('Reselect invoice to continue', '', 'info')\n                }\n            });\n\n\n            frappe.db.get_doc('POS Invoice', cur_frm.doc.custom_reference_invoice).then(r => {\n                setTimeout(() => {\n                    console.log(\":: POS INVOICE ::\", r)\n                    let newOutstandingAmount = r.custom_invoices_outstanding_amount_ - (cur_frm.doc.total * -1)\n                    _remark = `Amount of ${cur_frm.doc.total} received against the Invoice ${cur_frm.doc.custom_reference_invoice} (${r.custom_invoices_outstanding_amount_}), with new outstanding balance of EUR ${newOutstandingAmount}.`\n                    add_remark(_remark)\n                }, 10);\n            })\n        }\n    },\n\n    custom_item_to_reserved: function (frm) {\n\n        if (!isDeposit) {\n            document.querySelector('div.invoice_detail_field.custom_item_to_reserved-field').remove()\n            document.querySelector('div.invoice_detail_field.custom_reference_invoice-field').remove()\n            document.querySelector('div.invoice_detail_field.custom_item_reserved_status-field').remove()\n        } else {\n            let em = document.querySelector(\".submit-order-btn\")\n            em.style.display = 'none';\n            cur_frm.toggle_reqd('custom_item_reserved_status', 1)\n        }\n\n        if (cur_frm.doc.items.some(i => i.item_name === \"DEPOSIT\")) {\n\n            // $('input[data-fieldname=\"custom_item_to_reserved\"]').select2();\n\n\n            if (cur_frm.doc.custom_item_to_reserved === '') { return; }\n\n            frappe.db.get_doc('Item', cur_frm.doc.custom_item_to_reserved).then(r => {\n\n                total = 0;\n                cur_frm.doc.payments.forEach(p => {\n                    total += parseFloat(p.amount)\n                })\n\n                let _remark = `Amount EUR ${total} received as deposit.`\n                add_remark(_remark)\n\n\n                if (cur_frm.doc.custom_reference_invoice != '') {\n                    _remark = `Amount EUR ${total} against the item ${r.item_name} (${r.name}) for total amount of (EUR ${r.standard_rate}).`\n                    add_remark(_remark)\n                }\n\n                cur_frm.doc.custom_is_deposit = 1;\n\n                if (cur_frm.doc.custom_base_amount === 0 || cur_frm.doc.custom_base_amount === '') {\n                    cur_frm.doc.custom_base_amount = r.standard_rate;\n                }\n\n\n                if (cur_frm.doc.custom_invoices_outstanding_amount_ === 0 || cur_frm.doc.custom_invoices_outstanding_amount_ === '') {\n\n                    cur_frm.doc.custom_invoices_outstanding_amount_ = r.standard_rate - total;\n                } else {\n                    cur_frm.doc.custom_invoices_outstanding_amount_ = r.standard_rate - (cur_frm.doc.custom_invoices_outstanding_amount_ + total);\n                }\n\n            })\n\n        } else {\n            // document.querySelector('div.invoice_detail_field.custom_item_to_reserved-field').remove()\n            // document.querySelector('div.invoice_detail_field.custom_reference_invoice-field').remove()\n\n        }\n\n    },\n    onload: function (frm) {\n\n        console.log(window.location.href)\n        console.log(':: \u2728 ON LOAD :: ');\n\n        toggle_credit_forward_amount();\n        const button = document.querySelector(\".checkout-btn\");\n\n        button.addEventListener(\"click\", (event) => {\n            console.log(\" :: \uD83D\uDFE4 CLICK ON CHECKOUT ::\")\n\n            if (typeof $.fn.select2 !== 'undefined') {\n                console.log('Select2 is loaded');\n            } else {\n                setTimeout(() => {\n                    console.log('Select2 is not loaded');\n                    frappe.require(\"https://cdn.jsdelivr.net/npm/sweetalert2@11.17.2/dist/sweetalert2.all.min.js\")\n                    frappe.require(\"https://cdn.jsdelivr.net/npm/sweetalert2@11.17.2/dist/sweetalert2.min.css\")\n\n                    // frappe.require(\"https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css\")\n                    // frappe.require(\"https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js\")\n                }, 0);\n\n\n            }\n\n            if (!cur_frm.doc.items.some(i => i.item_name === \"DEPOSIT\")) {\n                console.log(':: DEPOSIT ITEM ::');\n            }\n\n            if (cur_frm.doc.items.some(i => i.item_name === \"DEPOSIT\")) {\n\n                return; \n                try {\n                    frappe.call({\n                        method: 'cpherbalist.material_request_custom.get_warehouse_items_select2',\n                        args: {\n                            filters: {\n                                warehouse: cur_frm.doc.set_warehouse\n                            }\n                        },\n                    }).then(response => {\n\n                        if (response.message) {\n                            // Handle the response (e.g., display items)\n                            console.log(response.message);  // This will log the list of items returned from the server\n                            console.log(\":: response.message.results ::\", response.message.results);\n\n                            var data1 = $.map(response.message.results, function (obj) {\n                                obj.id = obj.id || obj.pk; // replace pk with your identifier\n                                return obj;\n                            });\n\n                            checkElementExistence('input[data-fieldname=\"custom_item_to_reserved\"]', data1);\n                        }\n                    });\n                } catch (error) {\n\n                }\n\n            }\n\n\n        });\n    },\n\n    // TODO: SYNC\n    custom_apply_coupon: function (frm) {\n\n        let apply_pricing_rule = () => {\n\n\n        }\n\n\n        const today = new Date();\n\n        let couponCode = get_applied_coupons();\n        console.log('get_applied_coupons', couponCode);\n\n        let concatenatedString = couponCode.map(line => line.trim()).join(\",\");\n        console.log('coupons', concatenatedString);\n        let cc, prc, couponCodes;\n\n        if (couponCode.length >= 2) // we have to call apply coupons more than one's\n        {\n            couponCodes = couponCode\n            console.log('couponCodes ', couponCodes);\n\n            frappe.call({\n                async: true,\n                method: \"cpherbalist.pos.get_subtotal_with_coupons\",\n                args: {\n                    coupon_codes: concatenatedString\n                }\n            }).then((result) => {\n\n                console.log('result:', result);\n\n                if (result.message) {\n                    var total_discount = result.message.total_discount;\n\n                    add_remark(result.message.message);\n\n                    console.log(\"Total amount from all coupons: \", total_discount);\n                    console.log('\uD83E\uDDFE POS: ', cur_pos);\n\n                    $(`.mode-of-payment[data-mode=\"voucher\"]`)[0].click()\n                    document.querySelector('input[placeholder=\"Enter Voucher amount.\"]').disabled = false;\n                    cur_pos.payment.selected_mode.set_value(total_discount)\n                    document.querySelector('input[placeholder=\"Enter Voucher amount.\"]').disabled = true;\n\n                    //apply_discount(cur_frm, total_discount, couponCode);\n                    show_remove_coupons_button();\n                    readjustPaymentMethod(total_discount);\n\n\n                } else {\n                    console.log(\"No response or error in fetching the discount.\");\n                }\n\n            }).catch((err) => { });\n\n            console.log('totalDiscountAmount ', totalDiscountAmount);\n            cur_frm.set_value('discount_amount', totalDiscountAmount)\n\n        } else {\n            frappe.call({\n                method: \"cpherbalist.pos.get_coupon\",\n                args: {\n                    coupon_code: couponCode[0],\n                    b_by_name: true\n                }\n            }).then(response => {\n                if (response.message) {\n\n                    cc = response.message;\n                    console.log(\"Coupon details:\", cc);\n\n                    const dateObj = new Date(cc.valid_upto);\n\n                    // Check If Is Valid\n                    if (dateObj < today) {\n                        const error_msg = __(\"Coupon with code <b>{0}</b> is expired or is not valid.\", [couponCode,]);\n                        frappe.throw(error_msg)\n                        return;\n                    }\n                        \n                    if (cc.used >= 1) {\n                        const coupon_used_msg = __(\"Coupon with code <b>{0}</b> has already been used.\", [couponCode]);\n                        frappe.throw(coupon_used_msg)\n                        return;\n                    }\n\n                    if (cc.pricing_rule != null) {\n\n                        let pricing_rule = cc.pricing_rule;\n                        console.log('Pricing Rule:', pricing_rule);\n                        frappe.call('cpherbalist.pos.get_pricing_rule', {\n                            pricing_rule: pricing_rule\n                        }).then(r => {\n\n                            prc = r.message;\n                            console.log('Pricing Rule Details:', prc);\n                            cur_frm.set_value('discount_amount', prc.discount_amount)\n\n                            const coupon_applied_msg = __(\"Coupon with code <b>{0}</b> has been applied for the amount of <b>{1} {2}</b>.\", [\n                                couponCode,\n                                currency,\n                                prc.discount_amount\n\n                            ]);\n\n                            frappe.msgprint({\n                                title: __('Coupon Applied'),\n                                indicator: 'green,',\n                                message: coupon_applied_msg\n                            });\n\n                            show_remove_coupons_button();\n                            console.log('Discount Amount', prc);\n\n                        }).catch(error => {\n                            frappe.throw(__('Coupon is not valid.'))\n\n                        })\n                    }\n                    // PRICING RULE DO NOT EXIST\n                    else \n                    {\n                        \n                        let applicableAmount = cc.custom_amount;\n\n                        console.log(applicableAmount);\n                        show_remove_coupons_button();\n                        //apply_discount(cur_frm, applicableAmount, couponCode);\n\n                        console.log('\uD83E\uDDFE POS: ', cur_pos);\n                        add_remark(`Coupon ${couponCode}: ${currency} ${applicableAmount}`);\n\n                        // update values\n                        let cash_amount = 0;\n                        let coupon_amount = applicableAmount;\n                        let total_amount = cur_frm.doc.grand_total;\n\n                        try {\n                            cash_amount = parseFloat(document.querySelector(`.mode-of-payment[data-mode=\"cash\"] > .pay-amount`).innerText.split(' ')[1]);\n\n                            if (cash_amount === NaN) {\n                                cash_amount = 0;\n                            }\n                        } catch (e) {\n                            card_amount = 0;\n                        }\n\n                        let remaining_amount = total_amount - coupon_amount;\n\n                        $(`.mode-of-payment[data-mode=\"cash\"]`)[0].click()\n                        cur_pos.payment.selected_mode.set_value(remaining_amount)\n\n\n                        $(`.mode-of-payment[data-mode=\"voucher\"]`)[0].click()\n                        cur_pos.payment.selected_mode.set_value(applicableAmount)\n\n                        if (remaining_amount < 0) {\n                            $(`.mode-of-payment[data-mode=\"cash\"]`)[0].click()\n                            cur_pos.payment.selected_mode.set_value(0)\n\n                            $(`.mode-of-payment[data-mode=\"credit_card\"]`)[0].click()\n                            cur_pos.payment.selected_mode.set_value(0)\n\n                            // $(`.mode-of-payment[data-mode=\"deposit\"]`)[0].click()\n                            // cur_pos.payment.selected_mode.set_value(0)\n\n                            set_credit_forward_amount(Math.abs(remaining_amount), frm)\n\n                            $(`.mode-of-payment[data-mode=\"voucher\"]`)[0].click()\n                            cur_pos.payment.selected_mode.set_value(total_amount)\n                        }\n\n\n\n\n                    }\n\n                } else {\n                    const error_msg = __(\"Coupon with code <b>{0}</b> is expired or is not valid.\", [couponCode,]);\n                    frappe.throw(error_msg)\n                }\n            }).catch(error => {\n                const error_msg = __(\"Coupon with code <b>{0}</b> is expired or is not valid.\", [couponCode,]);\n                frappe.throw(error)\n                console.error(error)\n            });\n\n        }\n\n    },\n\n    refresh: function (frm) { }\n});\n\n\nfunction readjustPaymentMethod(couponAmount) {\n    let total_amount = cur_frm.doc.grand_total;\n\n    $(`.mode-of-payment[data-mode=\"cash\"]`)[0].click()\n    cur_pos.payment.selected_mode.set_value(total_amount - couponAmount)\n\n    $(`.mode-of-payment[data-mode=\"voucher\"]`)[0].click()\n    cur_pos.payment.selected_mode.set_value(couponAmount)\n}\n\nfunction checkElementExistence(s_element, a_data) {\n\n    let retryCount = 0; // Initialize retry count\n\n    const intervalId = setInterval(() => {\n        const element = document.querySelector(s_element);\n        if (element) {\n            console.log('Element found!');\n\n            $('input[data-fieldname=\"custom_item_to_reserved\"]')[0].setAttribute(\"multiple\", \"multiple\");\n            $('input[data-fieldname=\"custom_item_to_reserved\"]')[0].setAttribute(\"name\", \"custom_item_to_reserved[]\");\n\n            select2Element = $('input[data-fieldname=\"custom_item_to_reserved\"]').select2({\n                placeholder: 'Select items to reserve.',\n                tags: true,\n                tokenSeparators: [,],\n                scrollAfterSelect: true,\n                allowClear: true,\n                data: a_data,\n            });\n\n            // init_select2_events();\n\n            clearInterval(intervalId);\n        } else if (retryCount >= 5) {\n            console.log('Retry limit reached. Element not found.');\n            clearInterval(intervalId);\n        } else {\n            retryCount++;\n            console.log(`Retrying... Attempt ${retryCount} of 5`);\n        }\n\n    }, 2000);\n}", "\nfrappe.provide(\"erpnext\");\nfrappe.provide(\"erpnext.utils\");\nfrappe.provide(\"frappe.desk\");\nfrappe.provide(\"erpnext.PointOfSale\");\n\n// --------------------------------\n\n// Function to handle URL changes\nfunction onUrlChange() {\n    //console.log(\"The page URL changed to:\", window.location.href);\n}\n\n// Listen for the popstate event\nwindow.addEventListener('popstate', onUrlChange);\n\n// Optionally, you may want to listen for manual URL changes like `pushState` or `replaceState`\n(function () {\n    const originalPushState = history.pushState;\n    const originalReplaceState = history.replaceState;\n\n    // Override the pushState method\n    history.pushState = function (state, title, url) {\n        originalPushState.apply(history, arguments);\n        onUrlChange();  // Call the handler\n    };\n\n    // Override the replaceState method \n    history.replaceState = function (state, title, url) {\n        originalReplaceState.apply(history, arguments);\n        onUrlChange();  // Call the handler\n    };\n})();\n\n// --------------------------------\n\n// $(document).ready( ()=> {\n// setTimeout(() => {\n\n//     console.log('\uD83D\uDCA5')\n\n\n//         const params = new URLSearchParams(window.location.search);\n//         const coupon = params.get(\"evoucher\");\n    \n//         // Map coupon codes to item codes\n//         const couponToItemMap = {\n//             \"SUMMER50\": \"DISCOUNT-SUMMER50\",\n//             \"WELCOME10\": \"DISCOUNT-WELCOME10\"\n//         };\n    \n    \n//         if (window.location.pathname.includes(\"/point-of-sale\") && coupon) {\n    \n//             frappe.call({\n//                 method: \"cpherbalist.api.get_coupon_data\",  // Adjust this to your app path\n//                 args: {\n//                     coupon_code: coupon\n//                 },\n//                 callback: function (r) {\n\n//                     console.log(`Coupon \"${coupon}`);\n//                     console.log('\uD83D\uDCA5')\n\n//                     if (!r.exc && r.message) {\n//                         const coupon = r.message;\n//                         console.log(\"Coupon Data:\", coupon);\n                        \n//                         // e.g., add item to POS:\n//                         window.pos.app.$store.dispatch(\"pos/add_item_to_cart\", {\n//                             item_code: coupon.item_code,\n//                             qty: 1\n//                         });\n//                     } else {\n//                         frappe.msgprint(\"Invalid coupon code\");\n//                     }\n//                 }\n//             });\n//         }\n// }, 3500);\n// } )\n\n\nfrappe.require('point-of-sale.bundle.js', function () {\n\n    window.opening_pos_entry = undefined;\n    window.opening_date = undefined;\n    window.is_deposit = undefined;\n    window.allow_change_deposit_rate = true;\n    window.wrapper = undefined\n\n    erpnext.PointOfSale.Controller = class MyPosController extends erpnext.PointOfSale.Controller {\n        constructor(wrapper) {\n            \n            super(wrapper);\n\n            this.get_opening_entry().then((res) => {\n\n                console.log('pos opening entry ', res.message[0]);\n                window.opening_pos_entry = res.message[0].name;\n                window.opening_date = res.message[0].period_start_date;\n\n                var _ = this.force_close() >= 1;\n\n\n                if (_) {\n                    this.raise_pos_closing_alert(cur_frm);\n                }\n\n                setTimeout(() => {\n                    frappe.require(\"https://cdn.jsdelivr.net/npm/sweetalert2@11.17.2/dist/sweetalert2.all.min.js\")\n                    frappe.require(\"https://cdn.jsdelivr.net/npm/sweetalert2@11.17.2/dist/sweetalert2.min.css\")\n\n                    // frappe.require(\"https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css\")\n                    // frappe.require(\"https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js\")\n\n                    frappe.require(\"https://cdnjs.cloudflare.com/ajax/libs/lazysizes/5.1.2/lazysizes.min.js\")\n\n                }, 0);\n\n            });\n\n            // cur_frm.doc.pos_profile\n        }\n\n        init_item_cart() {\n            this.cart = new erpnext.PointOfSale.ItemCart({\n                wrapper: this.$components_wrapper,\n                settings: this.settings,\n                events: {\n                    get_frm: () => this.frm,\n    \n                    cart_item_clicked: (item) => {\n                        const item_row = this.get_item_from_frm(item);\n                        this.item_details.toggle_item_details_section(item_row);\n                    },\n    \n                    numpad_event: (value, action) => this.update_item_field(value, action),\n    \n                    checkout: () => this.save_and_checkout(),\n    \n                    edit_cart: () => this.payment.edit_cart(),\n    \n                    customer_details_updated: (details) => {\n                        this.item_selector.load_items_data();\n                        this.customer_details = details;\n                        // will add/remove LP payment method\n                        this.payment.render_loyalty_points_payment_mode();\n\n\n                        function deleteCookie(name, path = \"/\") {\n                            document.cookie = `${encodeURIComponent(name)}=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=${path}`;\n                        }\n\n                        function setCookie(name, value, days = 7, path = \"/\") {\n                            deleteCookie(name);\n\n\n                            const d = new Date();\n                            d.setTime(d.getTime() + (days * 24 * 60 * 60 * 1000));\n                            const expires = \"expires=\" + d.toUTCString();\n                            document.cookie = `${encodeURIComponent(name)}=${encodeURIComponent(value)};${expires};path=${path}`;\n                        }\n\n                        setCookie(\"pos_customer\", details.customer, 15);\n                        setCookie(\"pos_profile\", cur_pos.pos_profile, 15);\n\n\n\n                    },\n                },\n            });\n        }\n\n        update_totals_section(doc) {\n            if (!doc) doc = this.events.get_frm().doc;\n            const paid_amount = doc.paid_amount;\n            const grand_total = cint(frappe.sys_defaults.disable_rounded_total)\n                ? doc.grand_total\n                : doc.rounded_total;\n            const remaining = grand_total - doc.paid_amount;\n            const change = doc.change_amount || remaining <= 0 ? -1 * remaining : undefined;\n            const currency = doc.currency;\n            const label = __(\"Change Amount\");\n    \n            this.$totals.html(\n                `<div class=\"col\">\n                    <div class=\"total-label\">${__(\"Grand Total\")}</div>\n                    <div class=\"value\">${format_currency(grand_total, currency)}</div>\n                </div>\n                <div class=\"seperator-y\"></div>\n                <div class=\"col\">\n                    <div class=\"total-label\">${__(\"Paid Amount\")}</div>\n                    <div class=\"value\">${format_currency(paid_amount, currency)}</div>\n                </div>\n                <div class=\"seperator-y\"></div>\n                <div class=\"col\">\n                    <div class=\"total-label\">${label}</div>\n                    <div class=\"value\">${format_currency(change || remaining, currency)}</div>\n                </div>`\n            );\n\n\n        }\n\n        prepare_dom() {\n\n            this.wrapper.append(`<div class=\"point-of-sale-app\"></div>`);\n\n            this.$components_wrapper = this.wrapper.find(\".point-of-sale-app\");\n\n            console.log(':: components_wrapper ::', this.$components_wrapper)\n\n            setTimeout(() => {\n                render_pos_action_btn()\n                render_seller_profile()\n                removeCustomStyle()\n\n                //render_pricing_rule()\n            }, 0);\n        }\n\n        force_close() {\n            const givenDate = window.opening_date;\n            const dGiven = new Date(givenDate);\n\n            const dToday = new Date();\n\n            dGiven.setHours(0, 0, 0, 0);\n            dToday.setHours(0, 0, 0, 0);\n\n            const diffMilliseconds = dToday - dGiven;\n            const diffDays = diffMilliseconds / (1000 * 60 * 60 * 24);\n            return diffDays;\n        }\n\n        raise_pos_closing_alert = (frm) => {\n\n            frappe.confirm('The POS Closing Entry for this session does not exist. In order to proceed, a POS Closing Entry must be created. Please ensure that all required details are entered and confirm the closing entry before proceeding.',\n                () => {\n                    this.close_pos()\n                }, () => {\n                    frappe.dom.freeze();\n                })\n        }\n\n        close_pos() {\n            if (!this.$components_wrapper.is(\":visible\")) return;\n\n            let voucher = frappe.model.get_new_doc(\"POS Closing Entry\");\n            voucher.pos_profile = this.frm.doc.pos_profile;\n            voucher.user = frappe.session.user;\n            voucher.company = this.frm.doc.company;\n            voucher.pos_opening_entry = this.pos_opening;\n            voucher.period_end_date = frappe.datetime.now_datetime();\n            voucher.posting_date = frappe.datetime.now_date();\n            voucher.posting_time = frappe.datetime.now_time();\n            frappe.set_route(\"Form\", \"POS Closing Entry\", voucher.name);\n        }\n\n        get_opening_entry() {\n            return frappe.call(\"erpnext.selling.page.point_of_sale.point_of_sale.check_opening_entry\", {\n                user: frappe.session.user,\n            });\n        }\n\n        create_opening_voucher() {\n\n            const me = this;\n            const table_fields = [\n                {\n                    fieldname: \"mode_of_payment\",\n                    fieldtype: \"Link\",\n                    in_list_view: 1,\n                    label: __(\"Mode of Payment\"),\n                    options: \"Mode of Payment\",\n                    reqd: 1,\n                },\n                {\n                    fieldname: \"opening_amount\",\n                    fieldtype: \"Currency\",\n                    in_list_view: 1,\n                    label: __(\"Opening Amount\"),\n                    options: \"company:company_currency\",\n                    change: function () {\n                        dialog.fields_dict.balance_details.df.data.some((d) => {\n                            if (d.idx == this.doc.idx) {\n                                d.opening_amount = this.value;\n                                dialog.fields_dict.balance_details.grid.refresh();\n                                return true;\n                            }\n                        });\n                    },\n                },\n            ];\n            const fetch_pos_payment_methods = () => {\n                const pos_profile = dialog.fields_dict.pos_profile.get_value();\n                if (!pos_profile) return;\n                frappe.db.get_doc(\"POS Profile\", pos_profile).then(({ payments }) => {\n                    dialog.fields_dict.balance_details.df.data = [];\n                    payments.forEach((pay) => {\n                        const { mode_of_payment } = pay;\n                        dialog.fields_dict.balance_details.df.data.push({ mode_of_payment, opening_amount: \"0\" });\n                    });\n                    dialog.fields_dict.balance_details.grid.refresh();\n                });\n            };\n\n\n            const dialog = new frappe.ui.Dialog({\n                title: __(\"\uD83D\uDFE2 Create POS Opening Entry\"),\n                static: true,\n                fields: [\n                    {\n                        fieldtype: \"Link\",\n                        label: __(\"Company\"),\n                        default: frappe.defaults.get_default(\"company\"),\n                        options: \"Company\",\n                        fieldname: \"company\",\n                        reqd: 1,\n                        read_only: 1\n                    },\n                    {\n                        fieldtype: \"Link\",\n                        label: __(\"POS Profile\"),\n                        options: \"POS Profile\",\n                        fieldname: \"pos_profile\",\n                        reqd: 1,\n                        //get_query: () => pos_profile_query(),\n                        onchange: () => fetch_pos_payment_methods(),\n                        read_only: 0\n                    },\n                    {\n                        fieldname: \"balance_details\",\n                        fieldtype: \"Table\",\n                        label: __(\"Opening Balance Details\"),\n                        cannot_add_rows: true,\n                        in_place_edit: true,\n                        reqd: 1,\n                        data: [],\n                        fields: table_fields,\n                    },\n                ],\n\n                primary_action: async function ({ company, pos_profile, balance_details }) {\n                    if (!balance_details.length) {\n                        frappe.show_alert({\n                            message: __(\"Please add Mode of payments and opening balance details.\"),\n                            indicator: \"red\",\n                        });\n                        return frappe.utils.play_sound(\"error\");\n                    }\n\n                    // filter balance details for empty rows\n                    balance_details = balance_details.filter((d) => d.mode_of_payment);\n\n                    const method = \"erpnext.selling.page.point_of_sale.point_of_sale.create_opening_voucher\";\n                    const res = await frappe.call({\n                        method,\n                        args: { pos_profile, company, balance_details },\n                        freeze: true,\n                    });\n                    !res.exc && me.prepare_app_defaults(res.message);\n                    dialog.hide();\n                },\n                primary_action_label: __(\"Submit\"),\n            });\n\n\n            frappe.call({\n                method: \"cpherbalist.pos_automated_actions.get_user_pos_profile\",\n                args: { \"user\": frappe.session.user }, \n                callback: function (response) {\n\n                    if (dialog && response.message) {\n                        dialog.fields_dict['pos_profile'].set_value(response.message);\n\n                        setTimeout(() => {\n                            document.querySelector('.grid-add-row').remove()\n                        }, 800);\n                    }\n                },\n                error: function (error) {\n                    console.error(error);\n                }\n            });\n\n            dialog.show();\n            const pos_profile_query = () => {\n                return {\n                    query: \"erpnext.accounts.doctype.pos_profile.pos_profile.pos_profile_query\",\n                    filters: { company: dialog.fields_dict.company.get_value() },\n                };\n            };\n        }\n\n        get_item = async (code) => {\n            return await frappe.db.get_doc('Item', code)\n        }\n\n        raise_item_cp_alert = () => {\n            frappe.dom.unfreeze();\n            frappe.show_alert({\n                message: __(\"You can not select this item.\"),\n                indicator: \"red\",\n            });\n            frappe.utils.play_sound(\"error\");\n            return;\n        }\n\n        raise_item_deposit_alert = () => {\n            frappe.dom.unfreeze();\n            frappe.show_alert({\n                message: __(\"You can not select this item.\"),\n                indicator: \"red\",\n            });\n            frappe.utils.play_sound(\"error\");\n            return;\n        }\n\n        async on_cart_update(args) {\n            frappe.dom.freeze();\n            if (this.frm.doc.set_warehouse != this.settings.warehouse)\n                this.frm.doc.set_warehouse = this.settings.warehouse;\n            let item_row = undefined;\n            try {\n                let { field, value, item } = args;\n                item_row = this.get_item_from_frm(item);\n                const item_row_exists = !$.isEmptyObject(item_row);\n    \n                const from_selector = field === \"qty\" && value === \"+1\";\n                if (from_selector) value = flt(item_row.qty) + flt(value);\n    \n                if (item_row_exists) {\n                    if (field === \"qty\") value = flt(value);\n    \n                    if ([\"qty\", \"conversion_factor\"].includes(field) && value > 0 && !this.allow_negative_stock) {\n                        const qty_needed =\n                            field === \"qty\" ? value * item_row.conversion_factor : item_row.qty * value;\n                        await this.check_stock_availability(item_row, qty_needed, this.frm.doc.set_warehouse);\n                    }\n    \n                    if (this.is_current_item_being_edited(item_row) || from_selector) {\n                        await frappe.model.set_value(item_row.doctype, item_row.name, field, value);\n                        if (item.serial_no && from_selector) {\n                            await frappe.model.set_value(\n                                item_row.doctype,\n                                item_row.name,\n                                \"serial_no\",\n                                item_row.serial_no + `\\n${item.serial_no}`\n                            );\n                        }\n                        this.update_cart_html(item_row);\n                    }\n                } else {\n                    if (!this.frm.doc.customer) return this.raise_customer_selection_alert();\n    \n                    const { item_code, batch_no, serial_no, rate, uom, stock_uom } = item;\n    \n                    if (!item_code) return;\n    \n                    if (rate == undefined || rate == 0) {\n                        frappe.show_alert({\n                            message: __(\"Price is not set for the item.\"),\n                            indicator: \"orange\",\n                        });\n                        frappe.utils.play_sound(\"error\");\n                        return;\n                    }\n                    const new_item = { item_code, batch_no, rate, uom, [field]: value, stock_uom };\n    \n                    if (serial_no) {\n                        await this.check_serial_no_availablilty(item_code, this.frm.doc.set_warehouse, serial_no);\n                        new_item[\"serial_no\"] = serial_no;\n                    }\n    \n                    new_item[\"use_serial_batch_fields\"] = 1;\n                    if (field === \"serial_no\") new_item[\"qty\"] = value.split(`\\n`).length || 0;\n    \n                    item_row = this.frm.add_child(\"items\", new_item);\n    \n                    if (field === \"qty\" && value !== 0 && !this.allow_negative_stock) {\n                        const qty_needed = value * item_row.conversion_factor;\n                        await this.check_stock_availability(item_row, qty_needed, this.frm.doc.set_warehouse);\n                    }\n    \n                    await this.trigger_new_item_events(item_row);\n    \n                    this.update_cart_html(item_row);\n    \n                    if (this.item_details.$component.is(\":visible\")) this.edit_item_details_of(item_row);\n    \n                    if (\n                        this.check_serial_batch_selection_needed(item_row) &&\n                        !this.item_details.$component.is(\":visible\")\n                    )\n                        this.edit_item_details_of(item_row);\n                }\n            } catch (error) {\n                console.log(error);\n            } finally {\n                frappe.dom.unfreeze();\n                return item_row; // eslint-disable-line no-unsafe-finally\n            }\n        }\n\n\n        // async on_cart_update(args) {\n\n        //     frappe.dom.freeze();\n        //     let __ = false;\n\n        //     if (this.frm.doc.set_warehouse != this.settings.warehouse)\n        //         this.frm.doc.set_warehouse = this.settings.warehouse;\n        //     let item_row = undefined;\n\n        //     try {\n        //         let { field, value, item } = args;\n        //         item_row = this.get_item_from_frm(item);\n        //         const item_row_exists = !$.isEmptyObject(item_row);\n\n        //         console.log('item_code [on_cart_update]', args.item.item_code)\n\n        //         // let selected_item = this.get_item(args.item.item_code);\n\n        //         let _ = await frappe.db.get_doc('Item', args.item.item_code).then((value) => {\n\n        //             console.log('\uD83D\uDFE0 selected_item', value);\n\n\n\n        //             if (value.custom_is_virtual && value.custom_autocheckout) {\n\n        //                 setTimeout(() => {\n        //                     document.querySelector('.checkout-btn').click()\n        //                 }, 500);\n        //             }\n\n\n        //             if (cur_frm.doc.total_qty == 0) {\n\n        //                 if (value.name === 'Deposit') {\n        //                     window.is_deposit = true;\n        //                     return true;\n        //                 }\n\n        //                 if (value.custom_is_cp) {\n        //                     window.is_cp = true;\n        //                     return true;\n        //                 }\n        //             }\n\n        //             if (cur_frm.doc.total_qty === 1) {\n\n\n        //                 if (window.is_cp) {\n\n        //                     if (window.is_deposit) {\n        //                         return false;\n        //                     }\n\n        //                     if (value.custom_is_cp) {\n        //                         return true;\n        //                     } else {\n        //                         return false;\n        //                     }\n        //                 }\n\n        //                 if (window.is_deposit) {\n\n        //                     if (value.name != 'Deposit') {\n        //                         return false;\n        //                     }\n\n        //                     if (value.name === 'Deposit') {\n\n        //                         if (allow_change_deposit_rate && cur_frm.doc.total_qty === 1) {\n        //                             return true;\n        //                         } else {\n        //                             return false;\n        //                         }\n\n        //                     }\n        //                 }\n        //             }\n        //             return true;\n\n        //             // ==========================================================================================\n        //         })\n        //             .catch((e) => {\n        //                 console.error(e.message); // \"Item alert raised, stopping further execution\" or other errors\n        //             })\n\n\n        //         if (!_ && window.is_deposit) {\n        //             return this.raise_item_deposit_alert()\n        //         }\n\n        //         //console.log(_)\n\n        //         if (!_ && window.is_cp) {\n        //             return this.raise_item_cp_alert();\n        //         }\n\n\n        //         const from_selector = field === \"qty\" && value === \"+1\";\n        //         if (from_selector) value = flt(item_row.qty) + flt(value);\n\n        //         if (item_row_exists) {\n        //             if (field === \"qty\") value = flt(value);\n\n        //             if ([\"qty\", \"conversion_factor\"].includes(field) && value > 0 && !this.allow_negative_stock) {\n        //                 const qty_needed =\n        //                     field === \"qty\" ? value * item_row.conversion_factor : item_row.qty * value;\n        //                 await this.check_stock_availability(item_row, qty_needed, this.frm.doc.set_warehouse);\n        //             }\n\n        //             if (this.is_current_item_being_edited(item_row) || from_selector) {\n        //                 await frappe.model.set_value(item_row.doctype, item_row.name, field, value);\n        //                 this.update_cart_html(item_row);\n        //             }\n        //         } else {\n        //             if (!this.frm.doc.customer) return this.raise_customer_selection_alert();\n\n        //             const { item_code, batch_no, serial_no, rate, uom, stock_uom } = item;\n\n        //             if (!item_code) return;\n\n        //             if (rate == undefined || rate == 0) {\n        //                 frappe.show_alert({\n        //                     message: __(\"Price is not set for the item.\"),\n        //                     indicator: \"orange\",\n        //                 });\n        //                 frappe.utils.play_sound(\"error\");\n        //                 return;\n        //             }\n        //             const new_item = { item_code, batch_no, rate, uom, [field]: value, stock_uom };\n\n        //             if (serial_no) {\n        //                 await this.check_serial_no_availablilty(item_code, this.frm.doc.set_warehouse, serial_no);\n        //                 new_item[\"serial_no\"] = serial_no;\n        //             }\n\n        //             new_item[\"use_serial_batch_fields\"] = 1;\n        //             if (field === \"serial_no\") new_item[\"qty\"] = value.split(`\\n`).length || 0;\n\n        //             item_row = this.frm.add_child(\"items\", new_item);\n\n        //             if (field === \"qty\" && value !== 0 && !this.allow_negative_stock) {\n        //                 const qty_needed = value * item_row.conversion_factor;\n        //                 await this.check_stock_availability(item_row, qty_needed, this.frm.doc.set_warehouse);\n        //             }\n\n        //             await this.trigger_new_item_events(item_row);\n\n        //             this.update_cart_html(item_row);\n\n        //             if (this.item_details.$component.is(\":visible\")) this.edit_item_details_of(item_row);\n\n        //             if (\n        //                 this.check_serial_batch_selection_needed(item_row) &&\n        //                 !this.item_details.$component.is(\":visible\")\n        //             )\n        //                 this.edit_item_details_of(item_row);\n        //         }\n\n\n        //     } catch (error) {\n        //         console.log(error);\n        //     } finally {\n        //         frappe.dom.unfreeze();\n        //         return item_row; // eslint-disable-line no-unsafe-finally\n        //     }\n\n        // }\n\n        init_item_selector() {\n            this.item_selector = new erpnext.PointOfSale.ItemSelector({\n                wrapper: this.$components_wrapper,\n                pos_profile: this.pos_profile,\n                settings: this.settings,\n                events: {\n                    item_selected: (args) => this.on_cart_update(args),\n\n                    get_frm: () => this.frm || {},\n                },\n            });\n        }\n\n        prepare_menu() {\n\n            this.page.clear_menu();\n\n            this.page.add_menu_item((\"Toggle Recent Orders\"), this.toggle_recent_order.bind(this), false, 'Ctrl+O');\n\n            this.page.add_menu_item((\"Save as Draft\"), this.save_draft_invoice.bind(this), false, 'Ctrl+S');\n\n            this.page.add_menu_item(__('Close the POS (Z)'), this.close_pos.bind(this), false, 'Shift+Ctrl+C');\n\n            // this.page.add_menu_item(__('Transfers'), function () { window.location.href = 'material-request/new-material-request-' + generateRandomString(10) }, true, 'Shift+Ctrl+T');\n\n            // this.page.add_menu_item(__('Accept Transfers'), function () { window.location.href = 'material-request' }, true, 'Shift+Ctrl+A');\n        }\n\n        async check_stock_availability(item_row, qty_needed, warehouse) {\n            const resp = (await this.get_available_stock(item_row.item_code, warehouse)).message;\n\n            let _resp = await frappe.call({\n                method: \"cpherbalist.pos.get_available_qty_per_warehouse\",\n                args: {\n                    item_code: item_row.item_code,\n                }\n            })\n\n            let available_in_other_warehouse = (_resp.message.length >= 1);\n            //console.log(_resp.message.length)\n\n            const available_qty = resp[0];\n            const is_stock_item = resp[1];\n\n            frappe.dom.unfreeze();\n            const bold_uom = item_row.uom.bold();\n            const bold_item_code = item_row.item_code.bold();\n            const bold_warehouse = warehouse.bold();\n            const bold_available_qty = available_qty.toString().bold();\n\n            if (!(available_qty > 0)) {\n                if (is_stock_item) {\n                    frappe.model.clear_doc(item_row.doctype, item_row.name);\n\n                    let popup_message = __(\"Item Code: {0} is not available under warehouse {1}.\", [\n                        bold_item_code,\n                        bold_warehouse,\n                    ]);\n\n                    let pos_profile_meta = frappe.get_doc(\"POS Profile\", cur_pos.pos_profile)\n                    console.log(pos_profile_meta)\n                    \n                    if (available_in_other_warehouse) {\n\n                        // let filteredData = _resp.message\n                        //     .filter(_warehouse => _warehouse.actual_qty > 0) // Only include warehouses with actual_qty > 0\n                        //     .map(_warehouse => `<a onclick=\"createMovement(${pos_profile_meta.warehouse},${_warehouse.warehouse},${item_row.item_code})\" style='margin-top: var(--margin-lg );' target='_blank' href=\"/api/method/cpherbalist.api.redirect_to?_set_from_warehouse=${encodeURI(pos_profile_meta.warehouse)}&set_from_warehouse=${encodeURI(_warehouse.warehouse)}&set_warehouse=${encodeURI(_warehouse.warehouse)}&the_item=${encodeURI(item_row.item_code)}\">${_warehouse.warehouse} (${_warehouse.actual_qty})</a><br>`)\n                        //     .join(\"\");\n\n                        let filteredData = _resp.message\n                            .filter(_warehouse => _warehouse.actual_qty > 0) // Only include warehouses with actual_qty > 0\n                            .map(_warehouse => `<a onclick=\"createMovement('${pos_profile_meta.warehouse}','${_warehouse.warehouse}','${item_row.item_code}')\" style='margin-top: var(--margin-lg );'>${_warehouse.warehouse} (${_warehouse.actual_qty})</a><br>`)\n                            .join(\"\");\n\n                        //console.log(\"Available Warehouses:\", availableWarehouses);\n\n                        popup_message = __(\"Item Code: {0} is not available under warehouse {1}.<br><div style='margin-top: var(--margin-lg ); margin-bottom: var(--margin-lg );'><b>Available Locations</b></div>{2}\", [\n                            bold_item_code,\n                            bold_warehouse,\n                            filteredData\n                        ]);\n                    }\n                    frappe.throw({\n                        title: __(\"Item Not Available\"),\n                        message: popup_message,\n                    });\n                } else {\n                    return;\n                }\n            } else if (is_stock_item && available_qty < qty_needed) {\n                frappe.throw({\n                    message: __(\n                        \"Stock quantity not enough for Item Code: {0} under warehouse {1}. Available quantity {2} {3}.\",\n                        [bold_item_code, bold_warehouse, bold_available_qty, bold_uom]\n                    ),\n                    indicator: \"orange\",\n                });\n                frappe.utils.play_sound(\"error\");\n            }\n            frappe.dom.freeze();\n        }\n    };\n\n\n    setTimeout(() => {\n        try {\n            window.wrapper.pos = new erpnext.PointOfSale.Controller(wrapper);\n            window.cur_pos = wrapper.pos;\n        } catch (error) {\n            \n        }\n    }, 0);\n});\n\nregister_realtime_events = () => {\n    frappe.realtime.on('material_request', async (data) => {\n\n        x = await frappe.db.get_doc('User', frappe.session.user_email).then((result) => {\n\n                let selected_warehouse = result.default_warehouse ?? frappe.user_defaults['default_warehouse'];\n\n                if (data.to_warehouse === selected_warehouse) { frappe.utils.play_sound(\"custom-alert\");\n\n                    var audio = new Audio('/assets/cpherbalist/sounds/mixkit-unlock-game-notification-253.wav'); // replace with the actual sound file path\n                    audio.loop = true; // Set loop to true for continuous sound\n                    audio.play().catch(error => console.error('Error playing audio:',error));\n\n                    setTimeout(() => { audio.pause(); }, 600);\n\n                    frappe.msgprint({\n                        indicator: 'green',\n                        title: __(\n                            'Incoming Transfer Request \uD83D\uDD14'\n                        ),\n                        message: __(\n                            'Incoming Transfer Request from  ' +\n                            data\n                                .from_warehouse +\n                            '.'),\n                        primary_action_label: 'Open Request',\n                        primary_action: {\n                            action(\n                                values) {\n                                window\n                                    .location =\n                                    `/app/material-request/${data.material_request_doc}`\n                            }\n                        }\n                    });\n                }\n            }).catch((err) => {\n                console.error(err);\n            });\n\n    })\n\n}\n\n// setTimeout(() => {\n    \n//     $(document).ready(() => {\n//         register_realtime_events();\n\n//     })\n\n// }, 0);", "const toMilliseconds = (hrs, min, sec) => (hrs * 60 * 60 + min * 60 + sec) * 1000;\n\nwindow.default_expiration = toMilliseconds(0, 30, 0)\nwindow.lock = false;\nwindow.fail_count = 0;\nwindow.is_dialog_open = 0;\nwindow.render_exchange_rate_btn_retry_count = 3;\nwindow.is_cp = false;\nvar curr_item_is_cp = false;\nwindow.retryCount = 0;\nwindow.maxRetries = 5;\n\nlet styleTag;  // Reference to the dynamically added style tag\n\nfunction removeCustomStyle() {\n    // If the style tag exists, remove it\n    if (styleTag) {\n        styleTag.remove();\n        styleTag = null;  // Clear the reference\n    }\n}\n\nfunction observeElementVisibility(element, callback, options = {}) {\n    const defaultOptions = {\n        root: null,          // observes the viewport\n        rootMargin: '0px',   // margin around the root\n        threshold: 0.1,      // trigger callback when 10% of the element is visible\n    };\n\n    const observerOptions = { ...defaultOptions, ...options };\n\n    const observer = new IntersectionObserver((entries) => {\n        entries.forEach((entry) => {\n            if (entry.isIntersecting) {\n                callback(entry.target); // Element is visible\n            } else {\n                callback(entry.target, false); // Element is not visible\n            }\n        });\n    }, observerOptions);\n\n    observer.observe(element); // Start observing the element\n}\n\n// ===================================================================\n\nfunction getCookiesObject(cookies) {\n    if (cookies === void 0) { cookies = document.cookie; }\n    var cookiesObject = {};\n    var decodedCookies = decodeURIComponent(cookies);\n    decodedCookies.split(\"; \").forEach(function (cookie) {\n        var cookiePair = cookie.split(\"=\");\n        if (cookiePair.length > 1) {\n            cookiesObject[cookiePair[0]] = cookiePair[1];\n        }\n    });\n    return cookiesObject;\n}\n\nfunction createCookie(name, value, days, domain, options) {\n    var expires = \"\";\n    if (days) {\n        var date = new Date();\n        date.setTime(date.getTime() + days * 24 * 60 * 60 * 1000);\n        expires = \"; expires=\" + date.toUTCString();\n    }\n    var cookie = name + \"=\" + (value + expires) + \"; path=/\";\n    if (domain) {\n        cookie = cookie + \"; domain=\" + domain;\n    }\n    if (options) {\n        Object.keys(options).forEach(function (key) { return (cookie += \"; \" + key + \"=\" + options[key]); });\n    }\n    document.cookie = cookie;\n    return cookie;\n}\n\nfunction readCookie(name) {\n    var cookies = getCookiesObject(document.cookie);\n    return name in cookies ? cookies[name] : null;\n}\n\nfunction deleteCookie(name) {\n    createCookie(name, \"\", -1);\n}\n\n\n// ===================================================================\n\nclear_child_table = (frm, child_table_name, refresh = true) => {\n\n    frm.clear_table('delivery_note_items');\n\n    if (refresh) {\n        frm.refresh_field('delivery_note_items');\n    }\n}\n\n// ===================================================================\n\nwindow.dialog = new frappe.ui.Dialog({\n    title: 'Sales Profile User',\n    fields: [{\n        label: '\uD83D\uDC64 User',\n        fieldname: 'user_link',\n        fieldtype: 'Link',\n        options: 'User', \n        reqd: 1,\n        get_query: () => {\n            return {\n                query: \"cpherbalist.pos.get_seller_profile_users\",\n            };\n        }\n    },\n    // {\n    //     label: '\uD83D\uDD11 PIN Code',\n    //     fieldname: 'password',\n    //     fieldtype: 'Password',\n    //     reqd: 1\n    // }\n    ],\n    primary_action_label: 'Set Seller Profile',\n    primary_action: function () {\n        var data = dialog.get_values();\n\n        console.log(data);\n\n\n        if (data) {\n\n            frappe.call({\n                method: \"cpherbalist.api.get_user_info\",\n                args: {\n                    email: data.user_link\n                },\n                callback: function(r) {\n                    if (r.message) {\n\n\n                        localStorage.removeItem('seller_profile');\n                        localStorage.removeItem('seller_profile_name');\n\n\n                        setItemWithCustomExpiry('seller_profile', data.user_link, window.default_expiration);\n                        setItemWithCustomExpiry('seller_profile_name', r.message.full_name, window.default_expiration);\n\n                        render_seller_profile();\n                        dialog.hide();\n                    }\n                }\n            });\n\n\n\n\n\nif (false) {\n                frappe.call({\n                    method: \"cpherbalist.pos.validate_user_pin\",\n                    args: {\n                        user_email: data.user_link,\n                        pin: data.password\n                    },\n                    freeze: true,\n                    callback: function (r) {\n                        localStorage.removeItem('seller_profile');\n    \n                        if (r.message) {\n                            dialog.fields_dict.user_link.set_value('');\n                            dialog.fields_dict.password.set_value('');\n                            dialog.hide();\n                            setItemWithCustomExpiry('seller_profile', data.user_link, window.default_expiration);\n                            render_seller_profile();\n    \n    \n                            frappe.call({\n                                method: \"cpherbalist.api.log_seller_profile\", \n                                args: {\n                                    s_user: data.user_link,\n                                },\n                                callback: function(r) {\n                                    if (r.message) {\n                        \n                                    }\n                                },\n                                error: function(err) {\n                                    console.error(err);\n                                }\n                            });\n    \n    \n                        } else {\n    \n    \n                            frappe.msgprint({\n                                title: __('PIN is not valid'),\n                                indicator: 'red',\n                                message: __('Provided PIN is not valid.')\n    \n                            });\n    \n    \n                            dialog.fields_dict.password.set_value('');\n                            window.fail_count++\n    \n                            if (window.fail_count >= 3) {\n                                frappe.throw(__('Please contact the administrator.'))\n                                location.reload();\n                            }\n                        }\n                    }\n                });\n    \n            }\n}\n    }\n});\n\nfunction request_pin() {\n    if (true) {\n            dialog.show();\n            render_seller_profile();\n    }\n}\n\nconst observer = new MutationObserver((entries) => {\n    if (document.contains((document.querySelector(\".password-strength-indicator\")))) {\n        document.querySelector('.password-strength-indicator').remove()\n        observer.disconnect();\n    }\n});\n\nobserver.observe(document, {\n    subtree: true,\n    childList: true,\n});\n\n// ===================================================================\n\nfunction render_pricing_rule() {\n\n    const img = document.createElement('img');\n    img.src = '/assets/cpherbalist/img/discount-balloons.png'; // replace with your image URL\n    img.style.maxWidth = '10%';\n    img.style.marginLeft = \"10px\";\n\n    parent = document.querySelector('.indicator-pill').parentElement\n    parent.appendChild(img);\n\n\n\n}\n\n\nfunction render_seller_profile() {\n    let value = undefined;\n\n    //value = getItemWithExpiry('seller_profile');\n    value = getItemWithExpiry('seller_profile_name');\n\n    if (value) {\n        if (!document.querySelector('.seller-profile')) {\n\n            const outerSpan = document.createElement('span');\n\n            outerSpan.classList.add('seller-profile', 'indicator-pill', 'no-indicator-dot', 'whitespace-nowrap', 'red');\n            outerSpan.style.textTransform = \"uppercase\";\n\n            const innerSpan = document.createElement('span');\n\n            innerSpan.style.fontWeight = '700';\n\n\n            innerSpan.textContent = '\uD83D\uDD04 ' + value;\n\n            outerSpan.appendChild(innerSpan);\n\n            parent = document.querySelector('.indicator-pill').parentElement\n            parent.appendChild(outerSpan);\n\n\n            outerSpan.addEventListener('click', () => {\n                request_pin()\n\n            }, { once: false })\n            // outerSpan.onclick = function(){ \n            //     request_pin()\n            // };\n        } else {\n\n            document.querySelector('.seller-profile').remove()\n            render_seller_profile()\n        }\n    }\n}\n\n// ===================================================================\n\nrender_action_btn = (frm, button_id, button_name, callback, group = undefined) => {\n    if (!cur_frm.fields_dict[button_id]) {\n        cur_frm.add_custom_button(__(button_name), callback , group);  \n    }\n\n}\n\n// ===================================================================\n\nrender_pos_action_btn = (frm) => {\n\n    // cur_pos.page.add_button(\"\uD83D\uDCB1 Currency Exchange Rate\", ()=> { \n    //     let url = 'https://data.ecb.europa.eu/currency-converter'\n    //     window.open(url, \"_blank\");  \n    // })\n\n\n        cur_pos.page.add_button(\"\uD83D\uDCF1 Calculator\", ()=> { \n        try {\n            window.open('Calculator:///'); /* shows a confirm dialog to run the app*/\n        } catch (error) { }\n    }, { btn_class: \"\" })\n\n\n    cur_pos.page.add_button(\"\uD83E\uDDFE Recent Orders\", ()=> { \n        try {\n            cur_pos.toggle_recent_order()\n\n            \n        } catch (error) { }\n    }, { btn_class: \"\" })\n\n    cur_pos.page.add_button(\"\u2795 Create Coupon\", ()=> { \n        try {\n            window.open(\n                '/app/coupon-code/new-coupon-code-ddd',\n                '_blank'\n            );\n        } catch (error) { }\n    }, { btn_class: \"\" })\n\n    cur_pos.page.add_button(\"\u2795 New Order\", ()=> { \n        try {\n            window.location.href = '/app/point-of-sale' \n        } catch (error) { }\n    }, { btn_class: \"\" })\n\n\n\n    // cur_pos.page.add_button(\"\uD83E\uDDEEcc Round Amount\", ()=> { \n\n    //     try {\n    //         function roundDownToNearestTenth(value) {\n    //             const rounded = Math.floor(value * 10) / 10;\n    //             const difference = value - rounded;\n    //             const percentageDifference = (difference / value) * 100;\n            \n    //             return {\n    //                 original: value.toFixed(2),\n    //                 rounded: rounded.toFixed(2),\n    //                 difference: difference.toFixed(2),\n    //                 percentage: percentageDifference.toFixed(2)\n    //             };\n    //         }\n\n    //         let input = cur_frm.doc.grand_total;\n\n    //         const result = roundDownToNearestTenth(input);\n            \n    //         console.log(`Original   : ${result.original}`);\n    //         console.log(`Rounded    : ${result.rounded}`);\n    //         console.log(`Difference : ${result.difference}`);\n    //         console.log(`Percentage : ${result.percentage}`);\n    //         cur_frm.set_value('additional_discount_percentage', parseFloat(result.percentage));\n\n    //     } catch (error) { }\n    // }, { btn_class: \"\" })\n\n\n\nif (false) {\n        const value = getItemWithExpiry('seller_profile');\n        let buttonValue = '\uD83D\uDC64 Select Seller Profile'; \n    \n        if (value) {\n            buttonValue = '\uD83D\uDD04 Switch Seller Profile';\n        } else {\n    \n            let allowProceedWithoutSellerProfile = false; \n            buttonValue = '\uD83D\uDC64 Select Seller Profile';\n            \n        }\n    \n        cur_pos.page.add_button(buttonValue, ()=> { \n            try {\n                request_pin();\n            } catch (error) { }\n        })\n}\n\n\n\n\n\n    // cur_pos.page.add_button(\"\u2611\uFE0F Accept Transfers\", ()=> { \n    //     try {\n    //         window.location.href = 'material-request'\n    //     } catch (error) { }\n    // }, { btn_class: \"\" })\n\n\n}\n\n// ===================================================================\n\nfrappe.ui.form.on('Stock Entry', {\n    onload: function(frm) {\n        if (cur_frm.is_new()) {\n\n\n            cur_frm.set_value('stock_entry_type', 'Material Receipt');\n\n\n\n            let default_source_warehouse = frappe.db.get_single_value('CP Settings', 'default_source_warehouse')\n                .then(value => {\n                    console.log('default_source_warehouse:', value);\n                });\n\n            let default_target_warehouse = frappe.db.get_single_value('CP Settings', 'default_target_warehouse')\n                .then(value => {\n                    console.log('default_target_warehouse:', value);\n                });\n        }\n    }\n})\n// ===================================================================\n\nfrappe.ui.form.on('Sales Invoice', {\n    onload: function(frm) {\n\n        if (cur_frm.is_new()) {\n\n            console.log('\u2699\uFE0F [Sales Invoice] ')\n\n            let default_target_warehouse = frappe.db.get_single_value('CP Settings', 'default_target_warehouse')\n                .then(value => {\n                    console.log('default_target_warehouse:', value);\n                    cur_frm.set_value('set_warehouse', value);\n\n                });\n\n            cur_frm.set_value('update_stock', 1);\n        }\n\n\n    }\n})\n// ===================================================================\n\nfunction disable_copying() {\n    // Disable right-click\n    document.addEventListener('contextmenu', event => {\n        event.preventDefault();\n    });\n\n    // Disable text selection\n    document.addEventListener('mousedown', event => {\n        event.preventDefault();\n    });\n\n    document.addEventListener('selectstart', event => {\n        event.preventDefault();\n    });\n\n    // Disable keyboard shortcuts for copying\n    document.addEventListener('keydown', event => {\n        // Prevent Ctrl+C, Ctrl+X, Ctrl+U, and other common copying shortcuts\n        if ((event.ctrlKey || event.metaKey) && (event.key === 'c' || event.key === 'C' || event.key === 'x' || event.key === 'X')) {\n            event.preventDefault();\n        }\n    });\n}\n\nfunction detectDevTools() {\n    const width = window.outerWidth - window.innerWidth;\n    const height = window.outerHeight - window.innerHeight;\n\n    if (width > threshold || height > threshold) {\n        devtoolsOpen = true;\n        alert('F*** you ... Get out of here !! You cannot access this page.');\n        // Redirect or take other actions if needed\n        window.location.href = 'https://google.com/blocked';\n    } else {\n        devtoolsOpen = false;\n    }\n}\n\nfunction disable_right_click() {\n    // Disable right-click (context menu)\n    document.addEventListener('contextmenu', event => {\n        event.preventDefault();\n    });\n\n    // Disable key combinations (e.g., Ctrl+C, Ctrl+V, F12, F11, etc.)\n    document.addEventListener('keydown', event => {\n        // Disable common keys for browsers: Ctrl + U, Ctrl + Shift + I (Developer Tools)\n        if (\n            (event.ctrlKey && (event.key === 'u' || event.key === 'U' || event.key === 'i' || event.key === 'I')) ||\n            (event.ctrlKey && event.shiftKey && (event.key === 'I' || event.key === 'i')) ||\n            (event.key === 'F12') ||\n            (event.key === 'F11') ||\n            (event.key === 'F5') ||\n            (event.metaKey && event.key === 'i') || // For macOS: Command + i (Dev Tools)\n            (event.metaKey && event.key === 'u') || // For macOS: Command + u (View Source)\n            (event.metaKey && event.key === 'F12') // For macOS: Command + F12 (Dev Tools)\n        ) {\n            event.preventDefault();\n        }\n\n        // Block the default behavior of specific keys (like 'Inspect', 'View Source', etc.)\n        // Disable the 'F12' key (developer tools open)\n        if (event.key === 'F12' || event.key === 'F11' || event.key === 'F5') {\n            event.preventDefault();\n        }\n    });\n\n    // Disable pointer events on elements with class 'disabled'\n    document.querySelectorAll('.disabled').forEach(element => {\n        element.style.pointerEvents = 'none';\n    });\n}\n\n// ===================================================================\n\nfunction setItemWithCustomExpiry(key, value, expirationTimeMs) {\n\n    if (localStorage.getItem(key)) {\n        console.log('This key already exists. Cannot overwrite it.');\n        return; // Exit the function without setting the item\n    }\n\n    const item = {\n        value: value,\n        expiry: new Date().getTime() + expirationTimeMs\n    };\n\n    localStorage.setItem(key, JSON.stringify(item));\n    console.log('Item set successfully.');\n\n}\n\nfunction getItemWithExpiry(key) {\n    try {\n        const itemStr = localStorage.getItem(key);\n\n        if (!itemStr) {\n            request_pin()\n        }\n\n        const item = JSON.parse(itemStr);\n        const now = new Date().getTime();\n\n        if (now > item.expiry) {\n            localStorage.removeItem(key);\n            console.log(`Item with key \"${key}\" has expired and been removed.`);\n            request_pin()\n            getItemWithExpiry(key);\n        }\n\n        return item.value;\n    }\n    catch (err) { }\n}\n\n// ===================================================================\n\nfunction check_item(e) {\n    let item_count = cur_frm._items.length;\n\n    console.log('passed item', e)\n\n    if (item_count === 0) {\n        return e.custom_is_cp;\n    }\n\n    if (item_count >= 1) {\n        curr_item_is_cp = e.custom_is_cp;\n\n        if (!(curr_item_is_cp) && is_cp) {\n            return false;\n        }\n    }\n\n    return false;\n\n\n}\n\nfunction _customClick(e) {\n\n    if (is_cp) return;\n\n    const $item = e;\n    const item_code = decodeURIComponent($item.dataset.itemCode);\n\n\n    console.log('bind_custom_events');\n    console.log(item_code);\n\n    frappe.db.get_doc('Item', item_code).then((result) => {\n        //do something with result\n        console.log(result)\n        is_cp = result.custom_is_cp ?? false;\n\n        if (is_cp) {\n            console.log('Product is cp');\n        }\n\n    })\n        .catch(console.error)\n\n}\n\n// function get_settings(attr = undefined) {\n\n//     if (attr === undefined) return null;\n\n//     frappe.db.get_doc('Michalis Diamond Gallery Settings').then(res => {\n//         return res[attr]\n//     })\n// }\n\nasync function get_settings(attr = undefined) {\n    if (attr === undefined) return null;\n\n    try {\n        const res = await frappe.db.get_doc('Michalis Diamond Gallery Settings');\n        return res[attr];\n    } catch (error) {\n        console.error('Error fetching settings:', error);\n        return null;\n    }\n}\n\nasync function get_related_invoices(parent_invoice) {\n\n    try {\n        frappe.call({\n            method: \"cpherbalist.pos.get_child_invoices\", //dotted path to server method\n            args: {\n                filters: { parent_invoice: `'{parent_invoice}'` }\n            },\n            success: function (r) { },\n            error: function (r) { },\n            callback: function (r) {\n\n            }\n        }).then(res => {\n            if (res.message.length >= 1) {\n                window.related_invoices = r.message;\n                return true;\n            }\n\n            return false;\n        });\n\n        console.log('\uD83D\uDCA1 Check ....', obj)\n    } catch (error) {\n        return false;\n    }\n}\n\nfunction get_parent_invoice_obj(invoice_name = undefined) {\n    if (invoice_name === undefined) return;\n\n    try {\n        const res = frappe.db.get_doc('POS Invoice', cur_frm.doc.custom_parent_invoice)\n        return res;\n    } catch (error) {\n        console.error('Error fetching settings:', error);\n        return null;\n    }\n}\n\nfunction get_items_from_parent_invoice(parent_invoice_object = undefined) {\n    if (parent_invoice_object === undefined) return;\n\n    try {\n        return parent_invoice_object.custom_items_to_deposit\n    } catch (error) {\n        return []\n    }\n}\n\nasync function get_pos_profile_warehouse(pos_profile) {\n\n    if (pos_profile === '') return;\n\n    try {\n        const res = await frappe.db.get_doc('POS Profile', pos_profile);\n        return res.warehouse;\n    } catch (error) {\n        console.error('Error fetching settings:', error);\n        return null;\n    }\n}", "import \"./js/cpherbalist.js\"\nimport \"./js/custom_item.js\"\nimport \"./js/stock_entry.js\"\nimport \"./js/utils.js\"\nimport \"./js/pos_invoice_coupon.js\"\nimport \"./js/coupon_extensions.js\"\nimport \"./js/manufacturing_extensions.js\"\nimport \"./js/customer_extensions.js\"\nimport \"./js/customer_list.js\"\nimport \"./js/clear_pos_on_logout.js\"", "frappe.listview_settings['Coupon Code'] = {\n    onload: function(listview) {\n\n        listview.page.add_inner_button(__(\"\uD83D\uDD04 Sync with WooCommerce\"), function () {\n            // Optional: get selected coupons (if needed)\n            let selected = listview.get_checked_items();\n\n            var settings = {\n                \"url\": \"https://staging1.cpherbalist.com/wp-json/cp/v1/wc/coupon/recent\",\n                \"method\": \"GET\",\n                \"timeout\": 0,\n            };\n            \n            $.ajax(settings).done(function (response) {\n                console.log(response);\n\n                // const newDiv = document.createElement(\"div\");\n                // newDiv.id = 'couponModal'\n                // newDiv.style = 'display:none; position:fixed; top:10%; left:50%; transform:translateX(-50%); background:#fff; border:1px solid #ccc; padding:20px; z-index:10000; width:80%; max-height:400px; overflow:auto;\"'\n                // document.querySelector('.custom-actions').appendChild(newDiv)\n\n                    // Create the modal container\n                    const modal = document.createElement('div');\n                    modal.id = 'couponModal';\n                    modal.style.display = 'none';\n                    modal.style.position = 'fixed';\n                    modal.style.top = '10%';\n                    modal.style.left = '50%';\n                    modal.style.transform = 'translateX(-50%)';\n                    modal.style.background = '#fff';\n                    modal.style.border = '1px solid #ccc';\n                    modal.style.padding = '20px';\n                    modal.style.zIndex = '10000';\n                    modal.style.width = '80%';\n                    modal.style.maxHeight = '400px';\n                    modal.style.overflow = 'auto';\n\n                    // Create heading\n                    const heading = document.createElement('h3');\n                    heading.innerText = 'Select Coupons to Sync FROM WooCommerce';\n                    modal.appendChild(heading);\n\n\n                    const selectAllButton = document.createElement('button');\n                    selectAllButton.innerText = 'Select All Coupons';\n                    selectAllButton.classList = \"btn btn-default btn-sm primary-action\";\n                    selectAllButton.style = \"margin-bottom: 1em;\"\n                    selectAllButton.onclick = () => {\n\n\n                        toggleSelectionOnAllCheckedBoxes(true)\n\n\n                    };\n                    modal.appendChild(selectAllButton);\n\n\n                    const unselectAllButton = document.createElement('button');\n                    unselectAllButton.innerText = 'Unselect All Coupons';\n                    unselectAllButton.classList = \"btn btn-default btn-sm primary-action\";\n                    unselectAllButton.style = \"margin-bottom: 1em; margin-left: 1em;\"\n                    unselectAllButton.onclick = () => {\n\n\n                        toggleSelectionOnAllCheckedBoxes(false)\n\n\n                    };\n                    modal.appendChild(unselectAllButton);\n\n\n                    // Create Sync Button \n                    const syncButton = document.createElement('button');\n                    syncButton.innerText = '\uD83D\uDD04 Sync with ERP';\n                    syncButton.classList = \"btn btn-default btn-sm primary-action\";\n                    syncButton.style = \"margin-bottom: 1em; margin-left: 1em;\"\n                    syncButton.onclick = () => {\n                        // get all selected ...\n                        var checkedBoxes = getCheckedBoxes(\"wc_coupon\");\n\n                        checkedBoxes.forEach(e => {\n\n                            let couponCode = e.value; \n\n\n                            var settings = {\n                                \"url\": `https://staging1.com/wp-json/cp/v1/wc/coupon/meta?code=${couponCode}`,\n                                \"method\": \"GET\",\n                                \"timeout\": 0,\n                              };\n                              \n                              $.ajax(settings).done(function (response) {\n\n                                if (response.success) {\n\n                                    console.log('Sync With ERP ...')\n\n                                    let dd = { }\n\n\n                                    let _data = response.data\n\n                                    dd = {\n                                        s_coupon_code: e.value,\n                                        s_wc_coupon_code: e.value,\n                                        s_description: _data.description,\n                                        f_custom_amount :  _data.amount,\n                                        s_for_user: _data.email_restrictions ?? [], \n                                        s_valid_upto: _data.expiry_date\n                                    }\n\n\n\n                                    frappe.call({\n                                        method: \"cpherbalist.wc_extensions.create_erp_coupon_from_wc\",\n                                        args: dd,\n                                        callback: function(response) {\n                                            // Handle response\n                                            console.log(response.message);\n                                        }\n                                    }).then((result) => {\n                                        console.log('WooCommerce Coupon created in ERP !!')\n                                    }).catch((err) => {\n                                        \n                                    });\n                                }\n                            });\n                        })\n                    };\n                    modal.appendChild(syncButton);\n\n\n                    // Create Close button\n                    const closeButton = document.createElement('button');\n                    closeButton.innerText = 'Close';\n                    closeButton.classList = \"btn btn-primary btn-sm primary-action\";\n                    closeButton.style = \"    margin-bottom: 1em; margin-left: 1em;\"\n                    closeButton.onclick = () => {\n                        modal.style.display = 'none';\n                    };\n                    modal.appendChild(closeButton);\n\n\n                    // Create table\n                    const table = document.createElement('table');\n                    table.id = 'couponTable';\n                    table.border = '1';\n                    table.style.width = '100%';\n                    table.style.textAlign = 'left';\n\n                    // Create thead\n                    const thead = document.createElement('thead');\n                    const headerRow = document.createElement('tr');\n                    ['Code', 'Amount', 'Type', 'Expiry', 'Select'].forEach(text => {\n                        const th = document.createElement('th');\n                        th.innerText = text;\n                        headerRow.appendChild(th);\n                    });\n                    thead.appendChild(headerRow);\n                    table.appendChild(thead);\n\n                    // Create tbody\n                    const tbody = document.createElement('tbody');\n                    table.appendChild(tbody);\n\n                    // Append table to modal\n                    modal.appendChild(table);\n\n\n\n\n                    // Append modal to body\n                    document.body.appendChild(modal);\n\n\n                    console.log(response);\n                    let selectCoupons = [];\n\n                    // Fill the table\n                    var tableBody = '';\n                    response.forEach(function(coupon, index) {\n                        tableBody += `\n                            <tr>\n                                <td>${coupon.code}</td>\n                                <td>${coupon.amount}</td>\n                                <td>${coupon.discount_type}</td>\n                                <td>${coupon.expiry_date || 'None'}</td>\n                                <td><input class=\"select-coupon cc\" type=\"checkbox\" id=\"${coupon.code}\" name=\"wc_coupon\" value=\"${coupon.code}\"></td>\n                            </tr>`;\n                    });\n                    $('#couponTable tbody').html(tableBody);\n                \n                    // Show the modal\n                    $('#couponModal').show();\n                \n                    // Handle click\n                    $('.select-coupon').on('click', function() {\n                        var selectedCode = $(this).data('code');\n                    });\n\n\n            });\n\n\n\n            // // Send selected (or all) to server\n            // frappe.call({\n            //     method: 'your_app.your_module.api.sync_multiple_coupons',\n            //     args: {\n            //         coupons: selected.map(c => c.name)\n            //     },\n            //     callback: function(r) {\n            //         if (!r.exc) {\n            //             frappe.msgprint(__('Coupons synced with WooCommerce!'));\n            //         }\n            //     }\n            // });\n        \n        });\n\n    }\n};\n\nfunction getCheckedBoxes(chkboxName) {\n    var checkboxes = document.getElementsByName(chkboxName);\n    var checkboxesChecked = [];\n    // loop over them all\n    for (var i = 0; i < checkboxes.length; i++) {\n        // And stick the checked ones onto an array...\n        if (checkboxes[i].checked) {\n            checkboxesChecked.push(checkboxes[i]);\n        }\n    }\n    // Return the array if it is non-empty, or null\n    return checkboxesChecked.length > 0 ? checkboxesChecked : null;\n}\n\nfunction toggleSelectionOnAllCheckedBoxes(select) {\n    $(':checkbox.cc').each(function () {\n        this.checked = select;\n    });\n\n}\n\n\nfrappe.ui.form.on(\"Coupon Code\", {\n\tcoupon_name: function (frm) {\n\n\t},\n\nrefresh: function (frm) {\n    if (!cur_frm.is_new()) {\n\n        \n        if (cur_frm.doc.custom_pos_invoice)\n        {\n\n            frm.add_custom_button(__('\uD83D\uDED2 Open POS'), function() {\n                window.location = '/app/point-of-sale';\n            })\n        } else {\n\n            \n            frm.add_custom_button(__('\u2795 Create POS Invoice'), function() {\n\n                let _customer = cur_frm.doc.customer\n                let _amount = cur_frm.doc.custom_amount\n                let _couponCode = cur_frm.doc.coupon_code\n\n                let _default_voucher_item = undefined; \n                \n                \n                frappe.db.get_single_value('CP Settings', 'default_voucher_product')\n                .then(value => {\n                    _default_voucher_item = value\n                    console.log('default_voucher_item:', value);\n\n                    frappe.call({\n                        method: \"cpherbalist.api.create_pos_coupon_sales_order\",\n                        args: {\n                            item_code: _default_voucher_item ?? \"CPEV\",\n                            value: _amount,\n                            customer: _customer ?? \"Walkin Customer\",\n                            coupon_code: _couponCode\n                        },\n                        callback: function(r) {\n                            if (!r.exc && r.message.status === \"success\") {\n                                frappe.msgprint(\"POS Invoice created: <a href=''>\" + r.message.invoice_name + \"</a>\");\n\n                                \n\n\n                                // update \n                                frappe.call({\n                                    method: \"frappe.client.set_value\",\n                                    args: {\n                                        doctype: \"Coupon Code\",\n                                        name: cur_frm.doc.name,\n                                        fieldname: \"custom_pos_invoice\",\n                                        value: r.message.invoice_name,\n                                    },\n                                    callback: function (r) {\n                                        frappe.msgprint('Coupon Code Updated <br/> <a href=\"/app/point-of-sale\">Open POS</a>')\n                                    },\n                                });\n\n                            } else {\n                                frappe.msgprint(\"Error: \" + r.message.message);\n                            }\n                        }\n                    });\n\n                });\n            });  \n        }\n    } else {\n\n\n\n        \n\n    }\n\n},\n\n\n\n\n\nonload_post_render: function (frm) {\n\n    document.querySelector('input[data-fieldname=\"custom_amount\"]').addEventListener(\"change\", () => { \n        document.querySelector('input[data-fieldname=\"custom_min_amount\"]').value = document.querySelector('input[data-fieldname=\"custom_amount\"]').value;\n    })\n\n    document.querySelector('input[data-fieldname=\"custom_recipient_email\"]').addEventListener(\"change\", () => { \n        document.querySelector('input[data-fieldname=\"custom_allowed_emails\"]').value = document.querySelector('input[data-fieldname=\"custom_recipient_email\"]').value;\n    })\n\n},\n\n    onload: function(frm) {\n        // frm.add_custom_button(__('Re-Sync with WooCommerce'), function() {\n\n        //  });\n\n\n        function generateCouponCode(options = {}) {\n            const {\n                prefix = 'CPVN',\n                length = 10,\n                includeDate = false,\n                incInitials = false,\n                useTimestamp = true\n            } = options;\n\n\n            if (useTimestamp) return `${prefix}${Date.now()}`;\n\n            const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n            let randomPart = '';\n            for (let i = 0; i < length; i++) {\n                randomPart += chars.charAt(Math.floor(Math.random() * chars.length));\n            }\n\n            const datePart = includeDate ? new Date().toISOString().slice(0, 10).replace(/-/g, '') : '';\n            const initialpart = incInitials ? getInitials(cur_frm.doc.customer) : '';\n\n            return `${prefix}${datePart}${randomPart}`;\n        }\n\n        function getInitials(fullName) {\n\n            if (fullName === undefined || fullName === \"\") return \"\"; \n\n            const names = fullName.trim().split(/\\s+/); // Split by any whitespace\n\n            if (names.length === 1) {\n                return names[0].charAt(0).toUpperCase(); // Just first name\n            }\n\n            const firstInitial = names[0].charAt(0).toUpperCase();\n            const lastInitial = names[names.length - 1].charAt(0).toUpperCase();\n\n            // If there's a middle name, get its first letter\n            const middleInitial = names.length === 3 ? names[1].charAt(0).toUpperCase() : '';\n\n            return firstInitial + middleInitial + lastInitial;\n        }\n\n\n        function setCouponName() {\n            var coupon_name = generateCouponCode();\n\n\n            frm.doc.coupon_code = coupon_name;\n            frm.doc.coupon_name = coupon_name;\n\n            frm.refresh_field(\"coupon_name\");\n            frm.refresh_field(\"coupon_code\");\n        }\n\n        function setAutoWCSync() {\n            cur_frm.doc.custom_sync_with_woocommerce = 1\n            cur_frm.refresh_field(\"custom_sync_with_woocommerce\");\n        }\n\n        function addAutosuggestAmounts() {\n\n            const style = document.createElement('style');\n            style.textContent = `\n            nav {\n                width: fit-content;\n                border: 1px solid #666;\n                border-radius: 4px;\n                overflow: hidden;\n                display: flex;\n                flex-direction: row;\n                flex-wrap: no-wrap;\n            }\n            nav input { display: none; }\n            nav label {\n                font-family: sans-serif;\n                padding: 10px 16px;\n                border-right: 1px solid #ccc;\n                cursor: pointer;\n                transition: all 0.3s;\n            }\n            nav label:last-of-type { border-right: 0; }\n            nav label:hover { background: #eee; }\n            nav input:checked + label { background: #becbff; }\n            `;\n            document.head.appendChild(style);\n\n            // -------------------------\n\n            const nav = document.createElement('nav');\n            nav.style.marginTop = '10px';\n\n            const choices = ['10', '25', '50', '100','150','200','300','400']; // add more if needed\n\n            choices.forEach((choice, index) => {\n\n                const id = `x${index + 1}`;\n\n                const input = document.createElement('input');\n                input.type = 'radio';\n                input.id = id;\n                input.value = choice;\n                input.name = 'x';\n\n                input.addEventListener('click', () => {\n                    console.log(`${choice} selected`);\n                    frm.doc.custom_amount = choice;\n                    frm.refresh_field(\"custom_amount\");\n                });\n\n                const label = document.createElement('label');\n                label.htmlFor = id;\n                label.textContent = choice;\n                label.style.marginBottom = '0px';\n\n                nav.appendChild(input);\n                nav.appendChild(label);\n            });\n\ndocument.querySelector('[data-fieldname=\"custom_amount\"]').appendChild(nav);\n\n        }\n\n        if (cur_frm.is_new()) {\n\n            setCouponName()\n            setAutoWCSync()\n            //addAutosuggestAmounts()\n\t\t\n            function getCookie(name) {\n                const decodedCookie = decodeURIComponent(document.cookie);\n                const cookies = decodedCookie.split(\"; \");\n                for (let cookie of cookies) {\n                    const [key, value] = cookie.split(\"=\");\n                    if (key === name) {\n                        return value;\n                    }\n                }\n                return null; // Cookie not found or expired\n            }\n\n\n            const myValue = getCookie(\"pos_customer\");\n            if (myValue !== null) {\n                console.log(\"Cookie value:\", myValue);\n\n                const d = new Date();\n                let month = d.getMonth();\n                let year = d.getFullYear();\n\n\n                let coupon_code = Math.random().toString(12).substring(2, 12).toUpperCase();\n\n                let couponName = `${coupon_code}`\n\n                cur_frm.set_value('customer', myValue);\n\n            } else {\n                console.log(\"Cookie does not exist or is expired.\");\n            }\n\n            \n            const pos_profile = getCookie(\"pos_profile\");\n            if (pos_profile !== null) {\n                console.log(\"Cookie value:\", pos_profile);\n                cur_frm.set_value('custom_pos_profile', pos_profile);\n            } else {\n                console.log(\"Cookie does not exist or is expired.\");\n            }\n\n\n            let today = frappe.datetime.get_today();\n            let three_months_later = frappe.datetime.add_months(today, 3);\n\n            cur_frm.set_value('valid_from', today);\n            cur_frm.set_value('valid_upto', three_months_later);\n\n\n        }\n    },\n    validate: function (frm) {\n\n        if (frm.doc.custom_is_percent && frm.doc.custom_amount > 100) {\n            frappe.msgprint(__('Amount can not be grader of 100.'));\n            frappe.validated = false;\n        }\n\n    },\n\n    after_save(frm) {\n        // write setup code\n        console.log('After Save');\n\n        _valid_upto = new Date(cur_frm.doc.valid_upto)\n        const yyyy = _valid_upto.getFullYear();\n        const mm = String(_valid_upto.getMonth() + 1).padStart(2, '0'); // Months are zero-based\n        const dd = String(_valid_upto.getDate()).padStart(2, '0');\n\n        const formattedDate = `${yyyy}-${mm}-${dd}`;\n\n\n        if (frm.doc.custom_sync_with_woocommerce) {\n\n            let dd = {}\n\n            if (frm.doc.maximum_use >= 1) {\n                dd = {\n                    s_coupon_code: frm.doc.coupon_code,\n                    s_discount_type  : \"fixed_cart\",\n                    f_amount : `${frm.doc.custom_amount}`,\n                    f_minimum_amount : frm.doc.custom_min_amount,\n                    i_usage_limit: frm.doc.maximum_use,\n                    s_customer_email: frm.doc.custom_allowed_emails ?? [],\n                    d_expiry_date : formattedDate,\n\n                }\n            } else {\n\n                dd = {\n                    s_coupon_code: frm.doc.coupon_code,\n                    s_discount_type  : \"fixed_cart\",\n                    f_amount : `${frm.doc.custom_amount}`,\n                    f_minimum_amount : frm.doc.custom_min_amount,\n                    s_customer_email: frm.doc.custom_allowed_emails ?? [],\n                    d_expiry_date : formattedDate\n                }\n            }\n\n\n            if (frm.doc.custom_is_percent) {\n                dd.s_discount_type = \"percent\"\n            } else {\n                dd.s_discount_type = \"fixed_cart\"\n            }\n\n            frappe.call({\n                method: \"cpherbalist.wc_extensions.wc_update_coupon\",\n                args: {\n                    s_coupon_code : frm.doc.coupon_code, \n                    f_amount: `${frm.doc.custom_amount}`,\n                    d_expiry_date : formattedDate,\n                    s_customer_email: frm.doc.custom_allowed_emails ?? [],\n                    s_discount_type  : frm.doc.custom_is_percent ? \"percent\" : \"fixed_cart\",\n\n                },\n                callback: function(response) {\n                    //let data = JSON.parse(response.message.data)\n                    console.log(\"wc_update_coupon\", response)\n\n                    return;\n                }\n            }).then((result) => {\n                // update current coupon \n            }).catch((err) => { \n                console.log(err)\n            });\n            \n        } else { }\n    }\n});", "\nfrappe.ui.form.on('Item', {\n    refresh: function(frm) {\n        // Remove existing button (if any) to avoid duplicates\n        frm.remove_custom_button('Open BOM');\n\n        // Check if item has BOMs\n        if (!frm.is_new()) {\n\n            frm.add_custom_button('\uD83D\uDCE6 Move Stock', function() {\n                const $btn = $(this);\n                actual_qty = document.querySelectorAll(\"[data-actual_qty]\")[document.querySelectorAll(\"[data-actual_qty]\").length - 1].dataset.actual_qty ;\n                s_stock_uom = cur_frm.doc.stock_uom\n                f_rate = document.querySelectorAll(\"[data-rate]\")[0].dataset.rate;\n                _move_item(cur_frm.doc.item_code, 'Stores - CP', null, actual_qty, f_rate, s_stock_uom );\n\n            });\n\n            _move_item = function (item, source, target, actual_qty, rate, stock_uom, callback) {\n\n                var dialog = new frappe.ui.Dialog({\n                    title: target ? __(\"Add Item\") : __(\"Move Item\"),\n                    fields: [\n                        {\n                            fieldname: \"item_code\",\n                            label: __(\"Item\"),\n                            fieldtype: \"Link\",\n                            options: \"Item\",\n                            read_only: 1,\n                        },\n                        {\n                            fieldname: \"source\",\n                            label: __(\"Source Warehouse\"),\n                            fieldtype: \"Link\",\n                            options: \"Warehouse\",\n                            read_only: 1,\n                        },\n                        {\n                            fieldname: \"target\",\n                            label: __(\"Target Warehouse\"),\n                            fieldtype: \"Link\",\n                            options: \"Warehouse\",\n                            reqd: 1,\n                            get_query() {\n                                return {\n                                    filters: {\n                                        is_group: 0,\n                                    },\n                                };\n                            },\n                        },\n                        {\n                            fieldname: \"qty\",\n                            label: __(\"Quantity\"),\n                            reqd: 1,\n                            fieldtype: \"Float\",\n                            description: __(\"Available {0}\", [actual_qty]),\n                        },\n                        {\n                            fieldname: \"rate\",\n                            label: __(\"Rate\"),\n                            fieldtype: \"Currency\",\n                            hidden: 1,\n                        },\n                    ],\n                });\n                dialog.show();\n                dialog.get_field(\"item_code\").set_input(item);\n            \n                if (source) {\n                    dialog.get_field(\"source\").set_input(source);\n                } else {\n                    dialog.get_field(\"source\").df.hidden = 1;\n                    dialog.get_field(\"source\").refresh();\n                }\n            \n                if (rate) {\n                    dialog.get_field(\"rate\").set_value(rate);\n                    dialog.get_field(\"rate\").df.hidden = 0;\n                    dialog.get_field(\"rate\").refresh();\n                }\n            \n                if (target) {\n                    dialog.get_field(\"target\").df.read_only = 1;\n                    dialog.get_field(\"target\").value = target;\n                    dialog.get_field(\"target\").refresh();\n                }\n            \n                dialog.set_primary_action(__(\"Create Stock Entry\"), function () {\n                    if (source && (dialog.get_value(\"qty\") == 0 || dialog.get_value(\"qty\") > actual_qty)) {\n                        frappe.msgprint(__(\"Quantity must be greater than zero, and less or equal to {0}\", [actual_qty]));\n                        return;\n                    }\n            \n                    if (dialog.get_value(\"source\") === dialog.get_value(\"target\")) {\n                        frappe.msgprint(__(\"Source and target warehouse must be different\"));\n                        return;\n                    }\n            \n                    frappe.model.with_doctype(\"Stock Entry\", function () {\n                        let doc = frappe.model.get_new_doc(\"Stock Entry\");\n                        doc.from_warehouse = dialog.get_value(\"source\");\n                        doc.to_warehouse = dialog.get_value(\"target\");\n                        doc.stock_entry_type = doc.from_warehouse ? \"Material Transfer\" : \"Material Receipt\";\n                        let row = frappe.model.add_child(doc, \"items\");\n                        row.item_code = dialog.get_value(\"item_code\");\n                        row.s_warehouse = dialog.get_value(\"source\");\n                        row.stock_uom = stock_uom;\n                        row.uom = stock_uom;\n                        row.t_warehouse = dialog.get_value(\"target\");\n                        row.qty = dialog.get_value(\"qty\");\n                        row.conversion_factor = 1;\n                        row.transfer_qty = dialog.get_value(\"qty\");\n                        row.basic_rate = dialog.get_value(\"rate\");\n                        frappe.set_route(\"Form\", doc.doctype, doc.name);\n                    });\n                });\n\n                \n            };\n\n\n\n\n\n            if (false) {\n\n                frm.add_custom_button(__('Move Stock to Default Warehouse'), function () {\n                    frappe.confirm(\n                        'Move all stock for this item to its default warehouse?',\n                        function () {\n                            frappe.call({\n                                method: 'cpherbalist.stock_entry_extensions.move_stock_to_default_warehouse',\n                                args: {\n                                    item_code: frm.doc.name\n                                },\n                                callback: function (r) {\n                                    if (!r.exc) {\n                                        frappe.msgprint(r.message || 'Stock moved successfully.');\n                                    }\n                                }\n                            });\n                        }\n                    );\n                });\n\n            }\n\n            frappe.call({\n                method: \"frappe.client.get_list\",\n                args: {\n                    doctype: \"BOM\",\n                    filters: {\n                        item: frm.doc.name,\n                        is_active: 1,\n                        is_default: 1\n                    },\n                    limit_page_length: 1\n                },\n                callback: function(response) {\n                    if (response.message.length > 0) {\n                        // Add button if BOM exists4BJtRRsn7Ax4CBzm3WkJpJo7k\n                        \n                        frm.add_custom_button('Create Work Order', function() {\n\n                            let wo = frappe.model.get_new_doc('Work Order');\n                            wo.production_item = frm.doc.name,\n                            wo.qty = 1; \n\n                            frappe.set_route('Form', 'Work Order', wo.name);\n\n\n                            // frappe.new_doc('Work Order', {\n                            //     production_item: frm.doc.name,\n                            //     qty: 1\n                            // });\n                        });\n                    }\n\n                    // frm.add_custom_button('Create Stock Entry', function() { \n\n                    //     let default_source_warehouse = undefined; \n                    //     let default_target_warehouse = undefined; \n                        \n\n                    //     default_source_warehouse = frappe.db.get_single_value('CP Settings', 'default_source_warehouse')\n                    //         .then(value => {\n                    //             default_source_warehouse = value\n                    //             console.log('default_source_warehouse:', value);\n                    //         });\n        \n                    //     default_target_warehouse = frappe.db.get_single_value('CP Settings', 'default_target_warehouse')\n                    //         .then(value => {\n                    //             default_target_warehouse = value\n                    //             console.log('default_target_warehouse:', value);\n                    //         });\n\n\n                    //     frappe.model.with_doctype('Stock Entry', function() {\n\n                    //         let se = frappe.model.get_new_doc('Stock Entry');\n                    //         se.stock_entry_type = 'Material Receipt';\n                            \n                    //         document.cookie = `material_receipt_item_code=${frm.doc.name}; path=/; max-age=86400`; \n\n                    \n                    //         se.items = [{\n                    //             item_code: frm.doc.name,\n                    //             qty: 1,\n                    //             // s_warehouse: default_source_warehouse ?? 'Factory - CP',\n                    //             // t_warehouse: default_target_warehouse ?? 'Finished Goods - CP',\n                    //             basic_rate: 1\n                    //         }];\n                    \n                    //         frappe.set_route('Form', 'Stock Entry', se.name);\n                    //     });\n\n\n                    // });\n\n\n\n                }\n            });\n        }\n    },\n\n    onload_post_render: function(frm) {\n\n    }\n});\n\n// frappe.ui.form.on('Work Order', {\n//     setup: function (frm) {\n\n//     },\n//     onload: function (frm) {\n\n\n//         setTimeout(() => {\n\n//             frappe.call({\n//                 method: 'frappe.client.get',\n//                 args: {\n//                     doctype: 'CP Settings',\n//                 },\n//                 callback: function (response) {\n\n//                     if (response.message) {\n\n\n\n//                         let warehouse = response.message.default_target_warehouse;\n\n//                         console.log(response)\n\n//                         if (frm.is_new() === 1) {\n//                             frm.set_value('skip_transfer', 1); // 1 = checked (true)\n//                         }\n\n//                         frm.set_value('fg_warehouse', warehouse);\n\n//                         cur_frm.set_value('fg_warehouse', warehouse);\n//                         cur_frm.set_value('wip_warehouse', warehouse);\n//                         cur_frm.set_value('source_warehouse', warehouse);\n\n//                         let default_company = undefined; \n                            \n//                         frappe.db.get_single_value('Global Defaults', 'default_company')\n//                             .then(value => {\n//                                 default_company = value\n//                                 cur_frm.set_value('company', default_company);\n\n\n\n//                                 console.log('default_company:', value);\n//                             });\n\n//                             cur_frm.set_value('planned_start_date', frappe.datetime.now_datetime());\n\n                            \n\n//                         setTimeout(() => {\n//                             frm.doc.required_items.forEach(item => {\n//                                 item.source_warehouse = warehouse;\n//                             });\n//                             frm.refresh_field('required_items');\n//                         }, 500);\n\n\n//                         frappe.call({\n//                             method: \"run_doc_method\",\n//                             args: {\n//                                 docs: {\n//                                     \"name\": \"Document Naming Settings\",\n//                                     \"owner\": \"Administrator\",\n//                                     \"modified\": \"2025-04-29 11:38:26.876874\",\n//                                     \"modified_by\": \"Administrator\",\n//                                     \"docstatus\": 0,\n//                                     \"idx\": \"0\",\n//                                     \"user_must_always_select\": 0,\n//                                     \"current_value\": 0,\n//                                     \"default_amend_naming\": \"Amend Counter\",\n//                                     \"doctype\": \"Document Naming Settings\",\n//                                     \"amend_naming_override\": [],\n//                                     \"transaction_type\": \"Work Order\",\n//                                     \"__unsaved\": 1\n//                                 },\n//                                 method: \"get_options\"\n//                             },\n//                             callback: function(response) {\n//                                 cur_frm.set_value('naming_series', response.message);\n\n//                             }\n//                         });\n\n\n\n\n//                     }\n\n//                 } \n//             }).then((res) => {\n\n//             });\n\n\n//             frm.add_custom_button('Set Source Warehouse', () => {\n//                 frappe.prompt({\n//                     label: 'New Source Warehouse',\n//                     fieldname: 'new_warehouse',\n//                     fieldtype: 'Link',\n//                     options: 'Warehouse',\n//                     reqd: 1\n//                 }, function (values) {\n//                     frm.doc.required_items.forEach(item => {\n//                         item.source_warehouse = values.new_warehouse;\n//                     });\n//                     frm.refresh_field('required_items');\n//                 });\n//             });\n\n\n//         }, 10);\n\n//         console.log(\"onload\")\n\n//     },\n//     refresh: function (frm) {\n\n//     },\n//     validate: function (frm) {\n//         //check_tot_ref_qty(frm);\n//     }\n// });", "frappe.listview_settings[\"Customer\"] = {\n\n    onload: function (listview) { \n\n        listview.page.add_inner_button('\uD83D\uDD04 Sync with WooCommerce', () => {\n            frappe.call({\n                method: 'your_app_path.api.sync_woocommerce_customers',\n                callback: function(r) {\n                    if (!r.exc) {\n                        frappe.msgprint(__('Sync completed successfully.'));\n                        listview.refresh();\n                    }\n                }\n            });\n        });\n\n    }\n\n}", "frappe.listview_settings[\"Customer\"] = {\n\tadd_fields: [\"customer_name\", \"territory\", \"customer_group\", \"customer_type\", \"image\"],\n    hide_name_column: false,\n\n\tonload(listview) {\n\n\t\talert('5')\n\t\tconsole.log(\"\uD83D\uDD27 Hooks from cpherbalist loaded\")\n\n\t}\n};\n", "frappe.logout = (function(originalLogout) {\n    return function(...args) {\n        // CLEAR localStorage keys related to POS\n        Object.keys(localStorage).forEach(key => {\n            if (key.includes(\"pos\") || key.includes(\"POS\") || key.includes(\"frappe.pos\")) {\n                localStorage.removeItem(key);\n            }\n        });\n\n        // CLEAR sessionStorage just in case\n        sessionStorage.clear();\n\n        // CLEAR IndexedDB POS tables\n        let request = indexedDB.deleteDatabase(\"frappe_pos\");\n        request.onsuccess = function () {\n            console.log(\"POS IndexedDB cleared on logout \u2705\");\n        };\n\n        return originalLogout.apply(this, args);\n    };\n})(frappe.logout);\n"],
  "mappings": "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",
  "names": ["total", "element", "makeid", "x", "result", "r", "_from_warehouse", "outstandingAmount", "_remark", "obj", "wrapper", "dialog", "r", "render_seller_profile", "render_seller_profile", "settings", "response", "r", "getCookie", "dd", "actual_qty", "dialog", "r", "r"]
}
